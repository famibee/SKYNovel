;#USE-FONT	ipam
	[return cond="const.saveload.inited"]
	[let name="const.saveload.inited" text=true]

	[add_frame id=saveload src="saveload/_saveload.htm" visible=false]

	[event key='dom=saveload:#do_loadsave' label=*do_loadsave call=true global=true]
	[event key='dom=saveload:#do_del' label=*do_del call=true global=true]
	[event key='dom=saveload:#close' label=*exit global=true]
[return]

;*********************************************************
; 最新値で更新
*val2ctrl
	[set_frame id=saveload var_name=val_dic text=&const.sn.bookmark.json]
	[let_frame id=saveload var_name=val2ctrl function=true]
[return]

;*********************************************************
;	TitleMenu -> Load
*title_load
	[let name="しおりモード" text="Load"]
	[let name="呼び元" text="Title"]
[jump label=*main]

;*********************************************************
;	右クリック -> Load
*rclick_load
	[return cond="! isGameState"]

	[let name="しおりモード" text="Load"]
	[let name="呼び元" text="Text"]
[jump label=*main]

;*********************************************************
;	右クリック -> Save
*rclick_save
	[return cond="! isGameState"]

	[let name="しおりモード" text="Save"]
	[let name="呼び元" text="Text"]
[jump label=*main]

;*********************************************************
*main
	[enable_event enabled=false]
	[clear_event]

	; 最新値で更新
	[set_frame id=saveload var_name=val_mode text=&しおりモード]
	[set_frame id=saveload var_name=val_caller text=&呼び元]
	[call label=*val2ctrl]
	; 下部からスライドイン
	[frame id=saveload visible=true y=&const.sn.frm.saveload.height]
	[tsy_frame id=saveload time=500 y=0]
	[wait_tsy id=saveload]

	&isGameState = false
	[event key=rightclick label=*exit]
	[event key=command label=*exit]
	[event key=control label=*exit]
	[event key=end label=*exit]
	[event key=shift label=*exit]
	[event key=c label=*exit]
;	[gesture_event swipe=*nop f2tap=*exit f3tap=*exit]
	[set_focus to=null]
[s]


*do_loadsave
	[let_frame id=saveload var_name=val_place]
	[jump label=*save cond="しおりモード=='Save'"]
[return]

*do_del
	[let_frame id=saveload var_name=val_place]
	[erasebookmark place=&const.sn.frm.saveload.val_place]
[return]


;*********************************************************
*save
	[let name="_sl.place" text="&const.sn.frm.saveload.val_place"]
	[let name="exsits" text="&sys:const.an.bookmark[_sl.place] != null"]
	[se fn=&sysse_ok1 buf=SYS]
	[jump label=*ask_end_save cond="! exsits"]

	[enable_event layer="_syslay.mes" enabled=false]
		[_sl.set_pos place=&_sl.place]
		[plugin name="Mnu_InfoThumb" visible=true left=&pos.x top=&pos.y float=true]

		[ask_ync mes="しおりを上書き保存しますか？"]
			;#FONT	しおりを上書き保存しますか？

		[plugin name="Mnu_InfoThumb" visible=false]
	[enable_event layer="_syslay.mes" enabled=true]
	[jump label=*retry cond="_yesno != 'y'"]

*ask_end_save
	[call label=*do_save]
[jump label=*exit]

*do_save_resume
	&_sl.place = 0
	&pic = '_saveload_resume.jpg'
	[jump label=*do_save_noss]

*do_save
	[let name=pic text="& 'userdata:/storage/'+ _sl.place +'.jpg'"]
	[snapshot fn=&pic layer=&dsp_lays smoothing=true cond=const.sn.isApp]
	[let name=pic text='_saveload_browser.jpg' cond=!const.sn.isApp]

*do_save_noss
	[let name="enabled" text="&save:const.an.layer.mes.enabled|true"]
	[enable_event enabled=true]	; この状態も保存されるので一時変更
	[save place=&_sl.place pic=&pic dt=&const.Date.getDateStr txt=&const.sn.last_page_text]
	[enable_event enabled="&enabled"]
[return]

;*****************************
*quick_save
	[return cond="! isGameState"]

	[let name="_sl.place" text="&sys:saveload.quick_place"]
	[call label=*do_save]
	[let name="sys:saveload.quick_place" text="&(_sl.place +1) % const._sl.th_一ページあたりの数 +(const._sl.ページ数 *const._sl.th_一ページあたりの数)"]

;	[notice text="クイックセーブしました" left="&const.flash.display.Stage.stageWidth -10 -300" top=10]
[return]

;*********************************************************
*load
	[let name="_sl.place" text="&const.sn.frm.saveload.val_place"]
	[jump label=*ask_end_load cond="呼び元 == 'Title'"]
	[se fn=&sysse_ok1 buf=SYS]

	[enable_event layer="_syslay.mes" enabled=false]
		[_sl.set_pos place=&_sl.place]
		[plugin name="Mnu_InfoThumb" visible=true left=&pos.x top=&pos.y float=true]

		[ask_ync mes="しおりを読み込みますか？"]
			;#FONT	しおりを読み込みますか？

		[plugin name="Mnu_InfoThumb" visible=false]
	[enable_event layer="_syslay.mes" enabled=true]
	[jump label=*retry cond="_yesno != 'y'"]
	[jump label=*end_load]

*ask_end_load
	[se fn=&sysse_ok2_long buf=SYS]
*end_load
	; *** ブラックアウト ***
	[clear_lay layer="_syslay.mes" page=back]
	[lay layer="_syslay.bg" page=back visible=false]
	[trans layer="_syslay.mes,_syslay.bg" time=200]

*do_load
	[sys_scenario_start no_resume_save=true]
	[copybookmark from=&_sl.place to=0]
	[load place=&_sl.place]
;	[load place=&_sl.place fn=saveload label=*do_load_init]

*do_load_resume
	[se fn=&sysse_ok2_long buf=SYS]
;	[notice text="前回終了ポイントから再開します（キャンセル=ESC）" left="&const.flash.display.Stage.stageWidth -10 -300" top=10]
	[sys_scenario_start no_resume_save=true]
	[load place=0]
;	[load place=0 fn=saveload label=*do_load_init]

; ロード後最初にしたい共通処理
*do_load_init

[return]

;*****************************
*quick_load
	[return cond="! isGameState"]
	[return cond="sys:saveload.quick_place == null"]
	[let name="_sl.place" text="&(sys:saveload.quick_place +const._sl.th_一ページあたりの数 -1) % const._sl.th_一ページあたりの数 +(const._sl.ページ数 *const._sl.th_一ページあたりの数)"]
	[return cond="sys:const.an.bookmark[_sl.place] == null"]

	[enable_event enabled=false]
		[ask_ync_cleartext]
		[button enabled=false layer="mes_yesno" page=fore pic="& 'userdata:/storage/'+ _sl.place +'.jpg'" left=570 top=220]
		[ask_ync mes="クイックロードしますか？" no_cleartext=true]
			;#FONT	クイックロードしますか？
	[enable_event enabled=true]
	[return cond="_yesno != 'y'"]
[jump label=*do_load]


;*********************************************************
*exit
	[se fn=&sysse_cancel buf=SYS]

	[tsy_frame id=saveload time=500 y=&const.sn.frm.saveload.height]
	[wait_tsy id=saveload]
	[frame id=saveload visible=false]

	[enable_event enabled=true]
	[set_focus to=null]
	[let name="isGameState" text=true cond="呼び元=='Text'"]
[return]
