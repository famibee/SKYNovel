<!doctype html><html lang="ja">
<head><meta charset="utf-8"/><title>&nbsp;</title>
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="stylesheet" href="../lib/materialize.min.css">
<style type="text/css">
	html {user-select: none; -webkit-user-select: none;}	/* 選択禁止 */
	.card .card-title {margin-left: 0.5em;}		/* 微調整 */

	/* 複数行で「text-overflow: ellipsis;」みたいなことをする方法色々。 | blue sky IT https://www.aozora-blog.com/2018/07/22/post-151/ */
	.multiline-text {
		background: white;
		position: relative;
		height: 6em;	/* 4行 * 1.5 */
		overflow: hidden;
		text-align: unset;
		margin: 0 0.5em;	/* 微調整 */
	}
	.multiline-text:before,
	.multiline-text:after {
		position: absolute;
		background: white;
	}
	.multiline-text:before {
		content: "...";
		bottom: 0;
		right: 0;
	}
	.multiline-text:after {
		content: "";
		height: 100%;
		width: 100%;
	}
</style>
<script defer src="../lib/materialize.min.js"></script>
<script>
	let a = [	// セーブデータの内容
		{"fn": "../bgimage/yun_1317.jpg", "dt": "2018/12/18 11:44", "txt": "　ああ、桜の樹の下には屍体が埋まつてゐる！"},
		{"fn": "../bgimage/yun_2384.jpg", "dt": "2018/12/18 11:43", "txt": "　この渓間ではなにも俺をよろこばすものはない。鶯《うぐひす》や四十雀《しじふから》も、白い日光をさ青に煙らせてゐる木の若芽も、ただそれだけでは、もうろうとした心象に過ぎない。俺には惨劇が必要なんだ。その平衡があつて、はじめて俺の心象は明確になつて来る。俺の心は悪鬼のやうに憂欝に渇いてゐる。俺の心に憂欝が完成するときにばかり、俺の心は和《なご》んで来る。"},
		{"fn": "../bgimage/yun_2352.jpg", "dt": "2018/12/18 11:42", "txt": "  This is not justified test message. This is written many words and cut last sentence."},
		{"fn": "../bgimage/yun_1317.jpg", "dt": "2018/12/18 11:41", "txt": "　それは渓の水が乾いた磧《かはら》へ、小さい水溜を残してゐる、その水のなかだつた。思ひがけない石油を流したやうな光彩が、一面に浮いてゐるのだ。お前はそれを何だつたと思ふ。それは何万匹とも数の知れない、薄羽かげらふの屍体だつたのだ。隙間なく水の面を被つてゐる、彼等のかさなりあつた翅《はね》が、光にちぢれて油のやうな光彩を流してゐるのだ。そこが、産卵を終つた彼等の墓場だつたのだ。"},
		{"fn": "../bgimage/yun_1184.jpg", "dt": "2018/12/18 11:40", "txt": "　dummy data 二三日前、俺は、ここの渓へ下りて、石の上を伝ひ歩きしてゐた。水のしぶきのなかからは、あちらからもこちらからも、薄羽かげらふがアフロデイツトのやうに生れて来て、渓の空をめがけて舞ひ上つてゆくのが見えた。お前も知つてゐるとほり、彼等はそこで美しい結婚をするのだ。暫らく歩いてゐると、俺は変なものに出喰はした。"},
	];
	document.addEventListener('DOMContentLoaded', ()=> {
		M.Modal.init(document.getElementById('modal_q'));

		if (location.protocol == 'file:') {	// ローカルデバッグ用
			document.getElementById(`do_loadsave`).addEventListener('click', ()=> {
				console.log(`do_loadsave:${val_place}`);
			});
			val2ctrl();
		}
	}, false);

	var val_dic = null;
//	var val_caller = 'Title';	// タイトル画面から呼ばれた
	var val_caller = 'Text';	// 本文から呼ばれた
//	var val_mode = 'Load';		// ロード画面
	var val_mode = 'Save';		// セーブ画面
	var val_place = 0;
	function val2ctrl() {	// 変数→コンポーネント
		if (val_dic) a = JSON.parse(val_dic);
		if (val_mode == 'Save') a.push({"fn": "_saveloadBtn_nouse.png", "dt": "", "txt": "　新規にセーブします"});

		const title = (val_mode == 'Load') ?'ロード' :'セーブ';
		Array.from(document.getElementsByClassName('title'))
		.forEach(v=> v.textContent = title);

		const doit = document.getElementById('do_loadsave');
		const ev = document.createEvent('MouseEvents');
		ev.initEvent('click', false, true);

		const lst = document.getElementsByClassName('row')[0];
		lst.textContent = null;
		a.forEach((v, i)=> {
			lst.insertAdjacentHTML('afterbegin', `
<div class="col s12 m4 l3 hoverable sld2dsp grey lighten-2">
	<div class="card">
	<div class="card-image waves-effect waves-block waves-light">
		<img src="${v.fn}" id="d${i}" data-id="${i}" ${
			((val_mode == 'Load' && val_caller == 'Title')
			|| (val_mode == 'Save' && v.dt == ''))
			? 'data-nomodal="true"'	// モーダル確認は不要
			: 'class="modal-trigger" href="#modal_q"'
		}>
	</div>
	<span class="card-title">${v.dt}</span>
	<p class="multiline-text">${v.txt}</p>
	</div>
</div>`);
			document.getElementById(`d${i}`).addEventListener('click', e=> {
				val_place = e.target.dataset.id;
				if (e.target.dataset.nomodal) {	// モーダル確認は不要
					doit.dispatchEvent(ev);	// モーダル確認したかのようなイベント発生
					return false;
				}
				document.getElementById('modal_mes').textContent =
				(val_mode == 'Save') ?'セーブデータを上書きし、元のデータは失われます' :'';
				return false;
			}, false);
		});
		// 本番環境で閉じないので
		doit.addEventListener('click', ()=> {
			M.Modal.getInstance(document.getElementById('modal_q')).close();
		});
	}

</script>
</head>
<body class="blue-grey lighten-4" oncontextmenu="return false">
	<div class="navbar-fixed"><nav class="blue-grey darken-1" role="navigation">
		<div class="nav-wrapper container">
			<span class="brand-logo center"><span class="title">ロード</span>画面</span>
			<a class="waves-effect waves-light btn grey" id="close">x</a>
		</div>
	</nav></div>

	<div class="row"></div>

	<div id="modal_q" class="modal">
		<div class="modal-content">
			<h4><span class="title">ロード</span>しますか？</h4>
			<p id="modal_mes"></p>
		</div>
		<div class="modal-footer">
			<a class="modal-close waves-effect waves-green btn-flat" onclick="return false" id="do_loadsave"><span class="title">ロード</span>する</a>
			<a class="modal-close waves-effect waves-green btn-flat" onclick="return false">やめる</a>
		</div>
	</div>

</body></html>