<!doctype html><html ⚡>
<head>
	<meta charset="utf-8">
	<script async src="https://cdn.ampproject.org/v0.js"></script>
	<title>SKYNovel タグリファレンス Tag Reference</title>
	<link rel="canonical" href="./tag.htm">
	<meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1">
	<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style>
	<noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>
	<link href="https://fonts.googleapis.com/css?family=Inconsolata|Montserrat" rel="stylesheet">
	<style amp-custom>
		.ampstart-footer{background-color:#fff;color:#000;font-size:.75rem;padding-top:7rem;padding-bottom:7rem}
		.ampstart-footer .ampstart-icon{fill:#000}
		.ampstart-footer .ampstart-social-follow li:last-child{margin-right:0}

		.ampstart-headerbar{background-color:#ffffffc0;color:#000;z-index:999;box-shadow:0 0 5px 2px rgba(0,0,0,.1)}
		.ampstart-headerbar+:not(amp-sidebar),.ampstart-headerbar+amp-sidebar+*{margin-top:3.5rem}
		.ampstart-headerbar-nav .ampstart-nav-item{padding:0 1.5rem;background:0 0;opacity:.8}
		.ampstart-headerbar-nav{line-height:3.5rem}

/*! Bassplate | MIT License | http://github.com/basscss/bassplate *//*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */html{font-family:sans-serif;line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,footer,header,nav,section{display:block}h1{font-size:2em;margin:.67em 0}figcaption,figure,main{display:block}figure{margin:1em 40px}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent;-webkit-text-decoration-skip:objects}a:active,a:hover{outline-width:0}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:inherit;font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}dfn{font-style:italic}mark{background-color:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}img{border-style:none}svg:not(:root){overflow:hidden}button,input,optgroup,select,textarea{font-family:sans-serif;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=reset],[type=submit],button,html [type=button]{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{display:inline-block;vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-cancel-button,[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details,menu{display:block}summary{display:list-item}canvas{display:inline-block}[hidden],template{display:none}.h1{font-size:3rem}.h2{font-size:2rem}.h3{font-size:1.5rem}.h4{font-size:1.125rem}.h5{font-size:.875rem}.h6{font-size:.75rem}.font-family-inherit{font-family:inherit}.font-size-inherit{font-size:inherit}.text-decoration-none{text-decoration:none}.bold{font-weight:700}.regular{font-weight:400}.italic{font-style:italic}.caps{letter-spacing:.2em}.left-align{text-align:left}.center{text-align:center}.right-align{text-align:right}.justify{text-align:justify}.nowrap{white-space:nowrap}.break-word{word-wrap:break-word}.line-height-1{line-height:1rem}.line-height-2{line-height:1.125rem}.line-height-3{line-height:1.5rem}.line-height-4{line-height:2rem}.list-style-none{list-style:none}.underline{text-decoration:underline}.truncate{max-width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.list-reset{list-style:none;padding-left:0}.inline{display:inline}.block{display:block}.inline-block{display:inline-block}.table{display:table}.table-cell{display:table-cell}.overflow-hidden{overflow:hidden}.overflow-scroll{overflow:scroll}.overflow-auto{overflow:auto}.clearfix:after,.clearfix:before{content:" ";display:table}.clearfix:after{clear:both}.left{float:left}.right{float:right}.fit{max-width:100%}.max-width-1{max-width:24rem}.max-width-2{max-width:32rem}.max-width-3{max-width:48rem}.max-width-4{max-width:64rem}.border-box{box-sizing:border-box}.align-baseline{vertical-align:baseline}.align-top{vertical-align:top}.align-middle{vertical-align:middle}.align-bottom{vertical-align:bottom}.m0{margin:0}.mt0{margin-top:0}.mr0{margin-right:0}.mb0{margin-bottom:0}.ml0,.mx0{margin-left:0}.mx0{margin-right:0}.my0{margin-top:0;margin-bottom:0}.m1{margin:1rem}.mt1{margin-top:1rem}.mr1{margin-right:1rem}.mb1{margin-bottom:1rem}.ml1,.mx1{margin-left:1rem}.mx1{margin-right:1rem}.my1{margin-top:1rem;margin-bottom:1rem}.m2{margin:1.5rem}.mt2{margin-top:1.5rem}.mr2{margin-right:1.5rem}.mb2{margin-bottom:1.5rem}.ml2,.mx2{margin-left:1.5rem}.mx2{margin-right:1.5rem}.my2{margin-top:1.5rem;margin-bottom:1.5rem}.m3{margin:2rem}.mt3{margin-top:2rem}.mr3{margin-right:2rem}.mb3{margin-bottom:2rem}.ml3,.mx3{margin-left:2rem}.mx3{margin-right:2rem}.my3{margin-top:2rem;margin-bottom:2rem}.m4{margin:2.5rem}.mt4{margin-top:2.5rem}.mr4{margin-right:2.5rem}.mb4{margin-bottom:2.5rem}.ml4,.mx4{margin-left:2.5rem}.mx4{margin-right:2.5rem}.my4{margin-top:2.5rem;margin-bottom:2.5rem}.mxn1{margin-left:-1rem;margin-right:-1rem}.mxn2{margin-left:-1.5rem;margin-right:-1.5rem}.mxn3{margin-left:-2rem;margin-right:-2rem}.mxn4{margin-left:-2.5rem;margin-right:-2.5rem}.ml-auto{margin-left:auto}.mr-auto,.mx-auto{margin-right:auto}.mx-auto{margin-left:auto}.p0{padding:0}.pt0{padding-top:0}.pr0{padding-right:0}.pb0{padding-bottom:0}.pl0,.px0{padding-left:0}.px0{padding-right:0}.py0{padding-top:0;padding-bottom:0}.p1{padding:1rem}.pt1{padding-top:1rem}.pr1{padding-right:1rem}.pb1{padding-bottom:1rem}.pl1{padding-left:1rem}.py1{padding-top:1rem;padding-bottom:1rem}.px1{padding-left:1rem;padding-right:1rem}.p2{padding:1.5rem}.pt2{padding-top:1.5rem}.pr2{padding-right:1.5rem}.pb2{padding-bottom:1.5rem}.pl2{padding-left:1.5rem}.py2{padding-top:1.5rem;padding-bottom:1.5rem}.px2{padding-left:1.5rem;padding-right:1.5rem}.p3{padding:2rem}.pt3{padding-top:2rem}.pr3{padding-right:2rem}.pb3{padding-bottom:2rem}.pl3{padding-left:2rem}.py3{padding-top:2rem;padding-bottom:2rem}.px3{padding-left:2rem;padding-right:2rem}.p4{padding:2.5rem}.pt4{padding-top:2.5rem}.pr4{padding-right:2.5rem}.pb4{padding-bottom:2.5rem}.pl4{padding-left:2.5rem}.py4{padding-top:2.5rem;padding-bottom:2.5rem}.px4{padding-left:2.5rem;padding-right:2.5rem}.col{float:left}.col,.col-right{box-sizing:border-box}.col-right{float:right}.col-1{width:8.33333%}.col-2{width:16.66667%}.col-3{width:25%}.col-4{width:33.33333%}.col-5{width:41.66667%}.col-6{width:50%}.col-7{width:58.33333%}.col-8{width:66.66667%}.col-9{width:75%}.col-10{width:83.33333%}.col-11{width:91.66667%}.col-12{width:100%}@media (min-width:40.06rem){.sm-col{float:left;box-sizing:border-box}.sm-col-right{float:right;box-sizing:border-box}.sm-col-1{width:8.33333%}.sm-col-2{width:16.66667%}.sm-col-3{width:25%}.sm-col-4{width:33.33333%}.sm-col-5{width:41.66667%}.sm-col-6{width:50%}.sm-col-7{width:58.33333%}.sm-col-8{width:66.66667%}.sm-col-9{width:75%}.sm-col-10{width:83.33333%}.sm-col-11{width:91.66667%}.sm-col-12{width:100%}}@media (min-width:52.06rem){.md-col{float:left;box-sizing:border-box}.md-col-right{float:right;box-sizing:border-box}.md-col-1{width:8.33333%}.md-col-2{width:16.66667%}.md-col-3{width:25%}.md-col-4{width:33.33333%}.md-col-5{width:41.66667%}.md-col-6{width:50%}.md-col-7{width:58.33333%}.md-col-8{width:66.66667%}.md-col-9{width:75%}.md-col-10{width:83.33333%}.md-col-11{width:91.66667%}.md-col-12{width:100%}}@media (min-width:64.06rem){.lg-col{float:left;box-sizing:border-box}.lg-col-right{float:right;box-sizing:border-box}.lg-col-1{width:8.33333%}.lg-col-2{width:16.66667%}.lg-col-3{width:25%}.lg-col-4{width:33.33333%}.lg-col-5{width:41.66667%}.lg-col-6{width:50%}.lg-col-7{width:58.33333%}.lg-col-8{width:66.66667%}.lg-col-9{width:75%}.lg-col-10{width:83.33333%}.lg-col-11{width:91.66667%}.lg-col-12{width:100%}}.flex{display:-webkit-box;display:-ms-flexbox;display:flex}@media (min-width:40.06rem){.sm-flex{display:-webkit-box;display:-ms-flexbox;display:flex}}@media (min-width:52.06rem){.md-flex{display:-webkit-box;display:-ms-flexbox;display:flex}}@media (min-width:64.06rem){.lg-flex{display:-webkit-box;display:-ms-flexbox;display:flex}}.flex-column{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.flex-wrap{-ms-flex-wrap:wrap;flex-wrap:wrap}.items-start{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.items-end{-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end}.items-center{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.items-baseline{-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline}.items-stretch{-webkit-box-align:stretch;-ms-flex-align:stretch;align-items:stretch}.self-start{-ms-flex-item-align:start;align-self:flex-start}.self-end{-ms-flex-item-align:end;align-self:flex-end}.self-center{-ms-flex-item-align:center;-ms-grid-row-align:center;align-self:center}.self-baseline{-ms-flex-item-align:baseline;align-self:baseline}.self-stretch{-ms-flex-item-align:stretch;-ms-grid-row-align:stretch;align-self:stretch}.justify-start{-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.justify-end{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.justify-center{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.justify-between{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.justify-around{-ms-flex-pack:distribute;justify-content:space-around}.content-start{-ms-flex-line-pack:start;align-content:flex-start}.content-end{-ms-flex-line-pack:end;align-content:flex-end}.content-center{-ms-flex-line-pack:center;align-content:center}.content-between{-ms-flex-line-pack:justify;align-content:space-between}.content-around{-ms-flex-line-pack:distribute;align-content:space-around}.content-stretch{-ms-flex-line-pack:stretch;align-content:stretch}.flex-auto{-webkit-box-flex:1;-ms-flex:1 1 auto;flex:1 1 auto;min-width:0;min-height:0}.flex-none{-webkit-box-flex:0;-ms-flex:none;flex:none}.order-0{-webkit-box-ordinal-group:1;-ms-flex-order:0;order:0}.order-1{-webkit-box-ordinal-group:2;-ms-flex-order:1;order:1}.order-2{-webkit-box-ordinal-group:3;-ms-flex-order:2;order:2}.order-3{-webkit-box-ordinal-group:4;-ms-flex-order:3;order:3}.order-last{-webkit-box-ordinal-group:100000;-ms-flex-order:99999;order:99999}.relative{position:relative}.absolute{position:absolute}.fixed{position:fixed}.top-0{top:0}.right-0{right:0}.bottom-0{bottom:0}.left-0{left:0}.z1{z-index:1}.z2{z-index:2}.z3{z-index:3}.z4{z-index:4}.border{border-style:solid;border-width:1px}.border-top{border-top-style:solid;border-top-width:1px}.border-right{border-right-style:solid;border-right-width:1px}.border-bottom{border-bottom-style:solid;border-bottom-width:1px}.border-left{border-left-style:solid;border-left-width:1px}.border-none{border:0}.rounded{border-radius:3px}.circle{border-radius:50%}.rounded-top{border-radius:3px 3px 0 0}.rounded-right{border-radius:0 3px 3px 0}.rounded-bottom{border-radius:0 0 3px 3px}.rounded-left{border-radius:3px 0 0 3px}.not-rounded{border-radius:0}.hide{position:absolute;height:1px;width:1px;overflow:hidden;clip:rect(1px,1px,1px,1px)}@media (max-width:40rem){.xs-hide{display:none}}@media (min-width:40.06rem) and (max-width:52rem){.sm-hide{display:none}}@media (min-width:52.06rem) and (max-width:64rem){.md-hide{display:none}}@media (min-width:64.06rem){.lg-hide{display:none}}

	.h1,h1{font-size:3rem;line-height:3.5rem}
	.h2,h2{font-size:2rem;line-height:2.5rem}
	.h3,h3{font-size:1.5rem;line-height:2rem}
	.h4,h4{font-size:1.125rem;line-height:1.5rem}
	.h5,h5{font-size:.875rem;line-height:1.125rem}
	.h6,h6{font-size:.75rem;line-height:1rem}
	h1,h2,h3,h4,h5,h6{margin:0;padding:0;font-weight:400;letter-spacing:.06em}
	a,a:active,a:visited{color:inherit}
	.ampstart-btn{font-family:inherit;font-weight:inherit;font-size:1rem;line-height:1.125rem;padding:.7em .8em;text-decoration:none;white-space:nowrap;word-wrap:normal;vertical-align:middle;cursor:pointer;background-color:#fff;color:#4508b6;border:1px solid #4508b6}

	.w-header,h1,h2,h3,h4,h5,h6{font-family:Inconsolata,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif;margin-top: 1.2em}
	.ampstart-headerbar-nav .ampstart-nav-item{padding-right:1rem}
	.ampstart-headerbar-nav .ampstart-nav-item.w-current-page{color:#066573}
	.ampstart-headerbar-nav .ampstart-nav-item.w-current-page:after,.anchor[selected]:after{content:"";display:block;height:4px;background:linear-gradient(90deg,#1e1049 0,#004dff)}

	li>a{text-decoration:none}

	.w-header{
		background-image:linear-gradient(90deg,#1e1049 0,#004dff);
		padding:7rem 0;
		color:#fff;
		-webkit-clip-path: polygon(0 1%, 100% 25%, 100% 100%, 0 75%);
		clip-path: polygon(0 1%, 100% 25%, 100% 100%, 0 75%);
	}

	.w-components-sec-nav{min-width:200px;margin-top:-4.5rem;padding-top:4.5rem}
	.w-components-sec-nav >p {
		background:linear-gradient(90deg,#1e1049 0,#004dff);
		color: white;
	}

	.w-heading{letter-spacing:inherit;position:relative;font-size:1.5rem;}

	.ampstart-footer{position:relative}
	.ampstart-footer:before{content:"";position:absolute;width:100%;height:35px;background-image:linear-gradient(90deg,#1e1049 0,#004dff);top:0;left:0;right:0}
	.ampstart-device-preview-mask,.ampstart-device-preview-select{background:#f9f7f7}
	.ampstart-device-preview-select{box-shadow:0 0 5px 2px rgba(0,0,0,.1)}

	.w-component-desc{margin-bottom:5rem; padding-left:1rem;padding-right:1rem;line-height: 1.6}
	.w-component-desc h1{letter-spacing:inherit;background:linear-gradient(90deg,#1e1049 0,#004dff);color: white}
	.w-component-desc:target:before{content:"";display:block;height:3.5rem}
	.w-component-desc [placeholder]{background:#fff}
	.w-component-rendered{margin-top:3.5rem}
	.w-component-desc pre{white-space:pre-line;background:#f9f7f7;overflow-y:auto;margin:0}
	.w-example-code amp-accordion [expanded] h3:after{-webkit-transform:scaleY(-1);transform:scaleY(-1)}@media (max-width:40rem){.w-component-desc>*{padding-left:0;padding-right:0}

	.w-header>*{padding-left:0;padding-right:0}}@media (max-width:363px){.w-component-iframe-container>amp-iframe{-webkit-transform:scale(.792);transform:scale(.792);-webkit-transform-origin:0 0;transform-origin:0 0;width:343px}}
	:root{--font-family-serif:Montserrat,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,Arial,sans-serif;--font-family-monospace:Consolas,Menlo,Monaco,Lucida Console,Liberation Mono,DejaVu Sans Mono,Bitstream Vera Sans Mono,Courier New,monospace,sans-serif;--color-primary:#005AF0}

	body{font-family:var(--font-family-serif)}

	.abe-sublist,.ampstart-nav-item .abe-list-container{opacity:0;pointer-events:none;position:absolute}

	.ampstart-btn-secondary,.ampstart-btn-secondary[disabled],.ampstart-btn-secondary[disabled]:focus,.ampstart-btn-secondary[disabled]:hover,a.ampstart-btn-secondary,a.ampstart-btn-secondary.disabled,a.ampstart-btn-secondary.disabled:focus,a.ampstart-btn-secondary.disabled:hover{color:#fff;background:#4508b6;border:1px solid #fff}@keyframes slideUp{0%{transform:translateY(100%);opacity:.5}100%{transform:translateY(0);opacity:1}}amp-consent{background:#fff;box-shadow:rgba(0,0,0,.26) 0 0 19px 0;animation:.5s ease-out 0s 1 slideUp}

	table {margin: 1em 0;}
	th {background-color: #258cd1; color: white;}
	tr.y {background-color: #18bc9c; font-weight: bold;}
	table td {border-right: dashed 1px black; border-bottom: solid 1px black;}
</style>
</head>
<body>
	<header class="ampstart-headerbar fixed flex justify-start items-center top-0 left-0 right-0 pl2 pr4">
		<div role="button" on="tap:header-sidebar.toggle" tabindex="0" class="ampstart-navbar-trigger md-hide lg-hide pr2">☰</div>
		<nav class="ampstart-headerbar-nav ampstart-nav xs-hide">
		<ul class="list-reset m0 p0 flex justify-center nowrap">
		<li class="ampstart-nav-item abe-nav-list w-current-page">
			<a href="tag.htm" class="text-decoration-none block">タグ</a>
		</li>
		<li class="ampstart-nav-item abe-nav-list">
			<a href="macro_plg.htm" class="text-decoration-none block">マクロ・プラグイン</a>
		</li>
		<li class="ampstart-nav-item abe-nav-list">
			<a href="dev.htm" class="text-decoration-none block">開発者向け情報</a>
		</li>
		<li class="ampstart-nav-item abe-nav-list">
			<a href="https://github.com/famibee/SKYNovel" class="text-decoration-none block">github</a>
		</li>
		<li class="ampstart-nav-item abe-nav-list">
			<a href="https://famibee.blog.fc2.com/" class="text-decoration-none block">blog</a>
		</li>
	</ul>
	</nav>
	</header>

	<header class="w-header center" id="top-header">
		<h1 class="mb1">SKYNovel タグリファレンス</h1>
		<p class="block mb4 caps text-decoration-none">SKYNovel Tag Reference</p>
<!--
		<div class="w-index-header-action mx-auto">
<a class="ampstart-btn ampstart-btn-secondary caps mb1 mx2 text-decoration-none inline-block" href="/playground/#url=https://ampbyexample.com/components/amp-sidebar/source/">Open in Playground</a> <a class="ampstart-btn ampstart-btn-secondary caps mb1 mx2 text-decoration-none inline-block" href="/components/amp-sidebar/preview/">View Demo</a>
		</div>
-->
	</header>

<main class="flex pl2 mt1">
<aside class="w-components-sec-nav col-3 xs-hide sm-hide relative">
	<h3>タグ一覧</h3>
	<p>変数操作</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#clearsysvar">[clearsysvar] システム変数の全消去</a></li>
		<li class="mb1"><a href="#clearvar">[clearvar] ゲーム変数の全消去</a></li>
		<li class="mb1"><a href="#let">[let] 変数代入・演算</a></li>
		<li class="mb1"><a href="#let_abs">[let_abs] 絶対値</a></li>
		<li class="mb1"><a href="#let_char_at">[let_char_at] 文字列から一字取りだし</a></li>
		<li class="mb1"><a href="#let_index_of">[let_index_of] 文字列で検索</a></li>
		<li class="mb1"><a href="#let_length">[let_length] 文字列の長さ</a></li>
		<li class="mb1"><a href="#let_ml">[let_ml] インラインテキスト代入</a></li>
		<li class="mb1"><a href="#let_replace">[let_replace] 正規表現で置換</a></li>
		<li class="mb1"><a href="#let_round">[let_round] 四捨五入</a></li>
		<li class="mb1"><a href="#let_search">[let_search] 正規表現で検索</a></li>
		<li class="mb1"><a href="#let_substr">[let_substr] 文字列から抜きだし</a></li>
	</ul>
	<p>レイヤ共通</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#add_lay">[add_lay] レイヤを追加する</a></li>
		<li class="mb1"><a href="#clear_lay">[clear_lay] レイヤ設定の消去</a></li>
		<li class="mb1"><a href="#finish_trans">[finish_trans] トランス強制終了</a></li>
		<li class="mb1"><a href="#lay"><span style="color: red;">【暫定版】</span>[lay] レイヤ設定</a></li>
		<li class="mb1"><a href="#trans">[trans] ページ裏表を交換</a></li>
		<li class="mb1"><a href="#wt">[wt] トランス終了待ち</a></li>
	</ul>
	<p>レイヤトゥイーン</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#pause_tsy"><span style="color: red;">【暫定版】</span>[pause_tsy] 一時停止</a></li>
		<li class="mb1"><a href="#resume_tsy"><span style="color: red;">【暫定版】</span>[resume_tsy] 一時停止再開</a></li>
		<li class="mb1"><a href="#stop_tsy"><span style="color: red;">【暫定版】</span>[stop_tsy] トゥイーン中断</a></li>
		<li class="mb1"><a href="#tsy"><span style="color: red;">【暫定版】</span>[tsy] トゥイーン開始</a></li>
		<li class="mb1"><a href="#wait_tsy"><span style="color: red;">【暫定版】</span>[wait_tsy] トゥイーン終了待ち</a></li>
	</ul>
	<p>文字・文字レイヤ</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#autowc">[autowc] 文字ごとのウェイト</a></li>
		<li class="mb1"><a href="#ch"><span style="color: red;">【暫定版】</span>[ch] 文字を追加する</a></li>
		<li class="mb1"><a href="#clear_text">[clear_text] 文字消去</a></li>
		<li class="mb1"><a href="#current">[current] デフォルト文字レイヤ設定</a></li>
		<li class="mb1"><a href="#endlink">[endlink] ハイパーリンクの終了</a></li>
		<li class="mb1"><a href="#er">[er] ページ両面の文字消去</a></li>
		<li class="mb1"><a href="#graph">[graph] インライン画像表示</a></li>
		<li class="mb1"><a href="#link"><span style="color: red;">【暫定版】</span>[link] ハイパーリンク</a></li>
		<li class="mb1"><a href="#r">[r] 改行</a></li>
		<li class="mb1"><a href="#rec_ch"><span style="color: red;">【暫定版】</span>[rec_ch] 履歴書き込み</a></li>
		<li class="mb1"><a href="#rec_r"><span style="color: red;">【暫定版】</span>[rec_r] 履歴改行</a></li>
		<li class="mb1"><a href="#reset_rec"><span style="color: red;">【暫定版】</span>[reset_rec] 履歴リセット</a></li>
		<li class="mb1"><a href="#ruby2">[ruby2] 文字列と複数ルビの追加</a></li>
		<li class="mb1"><a href="#set_focus"><span style="color: red;">【暫定版】</span>[set_focus] 未作成：フォーカス移動</a></li>
		<li class="mb1"><a href="#span">[span] インラインスタイル設定</a></li>
		<li class="mb1"><a href="#tcy">[tcy] 縦中横を表示する</a></li>
	</ul>
	<p>画像・画像レイヤ</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#add_face">[add_face] 差分画像の追加</a></li>
	</ul>
	<p>HTMLフレーム</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#add_frame"><span style="color: red;">【暫定版】</span>[add_frame] フレーム</a></li>
		<li class="mb1"><a href="#let_frame"><span style="color: red;">【暫定版】</span>[let_frame] フレーム</a></li>
		<li class="mb1"><a href="#set_frame"><span style="color: red;">【暫定版】</span>[set_frame] フレーム</a></li>
		<li class="mb1"><a href="#frame"><span style="color: red;">【暫定版】</span>[frame] フレーム</a></li>
		<li class="mb1"><a href="#tsy_frame"><span style="color: red;">【暫定版】</span>[tsy_frame] フレーム</a></li>
	</ul>
	<p>イベント</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#clear_event">[clear_event] イベントを全消去</a></li>
		<li class="mb1"><a href="#enable_event">[enable_event] イベント有無の切替</a></li>
		<li class="mb1"><a href="#event"><span style="color: red;">【暫定版】</span>[event] イベントを予約</a></li>
		<li class="mb1"><a href="#l">[l] 行末クリック待ち</a></li>
		<li class="mb1"><a href="#p">[p] 改ページクリック待ち</a></li>
		<li class="mb1"><a href="#s">[s] 停止する</a></li>
		<li class="mb1"><a href="#set_cancel_skip">[set_cancel_skip] スキップ中断予約</a></li>
		<li class="mb1"><a href="#wait">[wait] ウェイトを入れる</a></li>
		<li class="mb1"><a href="#waitclick">[waitclick] クリックを待つ</a></li>
	</ul>
	<p>ＢＧＭ・効果音</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#fadebgm">[fadebgm] BGMのフェード</a></li>
		<li class="mb1"><a href="#fadeoutbgm">[fadeoutbgm] BGMのフェードアウト</a></li>
		<li class="mb1"><a href="#fadeoutse">[fadeoutse] 効果音のフェードアウト</a></li>
		<li class="mb1"><a href="#fadese">[fadese] 効果音のフェード</a></li>
		<li class="mb1"><a href="#playbgm">[playbgm] BGM の演奏</a></li>
		<li class="mb1"><a href="#playse">[playse] 効果音の再生</a></li>
		<li class="mb1"><a href="#stop_allse">[stop_allse] 全効果音再生の停止</a></li>
		<li class="mb1"><a href="#stopbgm">[stopbgm] BGM 演奏の停止</a></li>
		<li class="mb1"><a href="#stopfadese">[stopfadese] 音声フェードの停止</a></li>
		<li class="mb1"><a href="#stopse">[stopse] 効果音再生の停止</a></li>
		<li class="mb1"><a href="#volume">[volume] 音量設定</a></li>
		<li class="mb1"><a href="#wb">[wb] BGM フェードの終了待ち</a></li>
		<li class="mb1"><a href="#wf">[wf] 効果音フェードの終了待ち</a></li>
		<li class="mb1"><a href="#wl">[wl] BGM 再生の終了待ち</a></li>
		<li class="mb1"><a href="#ws">[ws] 効果音再生の終了待ち</a></li>
		<li class="mb1"><a href="#xchgbuf">[xchgbuf] 再生トラックの交換</a></li>
	</ul>
	<p>条件分岐</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#else">[else] その他ifブロック開始</a></li>
		<li class="mb1"><a href="#elsif">[elsif] 別条件のifブロック開始</a></li>
		<li class="mb1"><a href="#endif">[endif] ifブロックの終端</a></li>
		<li class="mb1"><a href="#if">[if] ifブロックの開始</a></li>
	</ul>
	<p>ラベル・ジャンプ</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#button"><span style="color: red;">【暫定版】</span>[button] ボタンを表示</a></li>
		<li class="mb1"><a href="#call">[call] サブルーチンコール</a></li>
		<li class="mb1"><a href="#jump">[jump] シナリオジャンプ</a></li>
		<li class="mb1"><a href="#pop_stack">[pop_stack] コールスタック破棄</a></li>
		<li class="mb1"><a href="#return">[return] サブルーチンから戻る</a></li>
	</ul>
	<p>マクロ</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#bracket2macro">[bracket2macro] 括弧マクロの定義</a></li>
		<li class="mb1"><a href="#break_macro">[break_macro] マクロから脱出</a></li>
		<li class="mb1"><a href="#char2macro">[char2macro] 一文字マクロの定義</a></li>
		<li class="mb1"><a href="#endmacro">[endmacro] マクロ定義の終了</a></li>
		<li class="mb1"><a href="#macro">[macro] マクロ定義の開始</a></li>
	</ul>
	<p>しおり</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#copybookmark">[copybookmark] しおりの複写</a></li>
		<li class="mb1"><a href="#erasebookmark">[erasebookmark] しおりの消去</a></li>
		<li class="mb1"><a href="#load">[load] しおりの読込</a></li>
		<li class="mb1"><a href="#record_place">[record_place] セーブポイント指定</a></li>
		<li class="mb1"><a href="#reload_script">[reload_script] スクリプト再読込</a></li>
		<li class="mb1"><a href="#save">[save] しおりの保存</a></li>
	</ul>
	<p>画面揺らし</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#quake">[quake] 画面を揺らす</a></li>
		<li class="mb1"><a href="#stop_quake">[stop_quake] 画面揺らし中断</a></li>
		<li class="mb1"><a href="#wq">[wq] 画面揺らし終了待ち</a></li>
	</ul>
	<p>システム</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#close">[close] アプリの終了</a></li>
		<li class="mb1"><a href="#loadplugin"><span style="color: red;">【暫定版】</span>[loadplugin] プラグインの読み込み</a></li>
		<li class="mb1"><a href="#navigate_to">[navigate_to] ＵＲＬを開く</a></li>
		<li class="mb1"><a href="#snapshot"><span style="color: red;">【暫定版】</span>[snapshot] スナップショット</a></li>
		<li class="mb1"><a href="#title">[title] タイトル指定</a></li>
		<li class="mb1"><a href="#toggle_full_screen">[toggle_full_screen] 全画面状態切替</a></li>
		<li class="mb1"><a href="#window">[window] アプリウインドウ設定</a></li>
	</ul>
	<p>デバッグ・その他</p>
	<ul class="anchors list-reset m0 p0 px1">
		<li class="mb1"><a href="#dump_val">[dump_val] 変数のダンプ</a></li>
		<li class="mb1"><a href="#dump_script"><span style="color: red;">【暫定版】</span>[dump_script] スクリプトのダンプ</a></li>
		<li class="mb1"><a href="#dump_stack">[dump_stack] スタックのダンプ</a></li>
		<li class="mb1"><a href="#log">[log] ログ出力</a></li>
		<li class="mb1"><a href="#dump_lay">[dump_lay] レイヤのダンプ</a></li>
		<li class="mb1"><a href="#stats">[stats] パフォーマンス表示</a></li>
		<li class="mb1"><a href="#trace">[trace] デバッグ表示へ出力</a></li>
	</ul>
</aside>

<article class="w-components flex-auto col-9">
<section class="w-component-desc">

<h1>変数操作</h1>

<h2 id="clearsysvar" class="w-heading">[clearsysvar] システム変数の全消去</h2>
<h4>sys:変数を全消去。削除すると言うより、初期化する</h4>
<p class="mb2 px1">

	引数無し。

</p>
<h2 id="clearvar" class="w-heading">[clearvar] ゲーム変数の全消去</h2>
<h4>save:変数を全消去。削除すると言うより、初期化する</h4>
<p class="mb2 px1">

	具体的には、save:変数を全消去してから、<br>
	&save:const.sn.mesLayer = ''<br>
	&save:sn.doRecLog = false<br>
	&save:const.sn.sLog = ''

</p>
<h2 id="let" class="w-heading">[let] 変数代入・演算</h2>
<h4>変数に値を代入する。</h4>
<p class="mb2 px1">

<p class="mb2 px1">
変数については「<a href="dev.md#reserve_value_sys">SKYNovel 組み込み変数</a>」を参照して下さい

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>変数名</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>セットする値</td></tr>
<tr><td>cast</td><td></td><td>出来るだけ数値変換</td><td>（コメントを参照）</td><td>値をセットする際の型。<br>num……数値（実数）。「01」は数値の1となる。<br>int……数値（符合付き整数）<br>uint……数値（符合なし整数）<br>bool……Boolean<br>str……文字列。「01」は「01」のまま。</td></tr>
</table>
<pre>
[let]を使わない、より簡潔な記述文法があります。
	※condのような条件分岐、「=aaa|0x0」のような省略記法はできません。
以下の記述は、
	[let name=a text=1]
	[let name="b" text=2]
	[let name=ret text="&amp;a + b"]（文字列ではなく計算の場合、右辺に&amp;をつける）
	[let name="&amp;'ret'+ a" text="&amp;1 + b"]（左辺で&amp;を使える）
	以下のようにも書けます。（&amp;から改行かタブまでを[let]文と解釈します）
	&amp;a=1
	&amp;b=2
	&amp;ret = a + b（このように、右辺の&amp;は省略します。常に&amp;がついているイメージ）
	&amp;&amp;'tst' + a = 1+b（左辺で&amp;を使える。&amp;ret1 = 1 + b と同じ）
キャストも記述できます。（両者は同じ意味）
	[let name=ret text=&amp;1+2 cast=int]（結果は3。1+2の計算結果が入る）
	&amp;ret=1+2=int（同上）
キャスト動作そのものは、以下のとおり。
	&amp;num = '0+1' = int（結果は0、文字列「0+1」を計算せず文字列のまま、数値に変換できないため）
	&amp;num = 0+1 = int（結果は1、0+1という計算結果をintで変数へ）
	&amp;txt = '0+1' = str（結果は文字列「0+1」、文字列をそのまま変数に）
	&amp;txt = 0+1 = str（結果は文字列「1」、0+1を計算してから結果1を文字列「1」として変数に）
</pre>
</p>


<h2 id="let_abs" class="w-heading">[let_abs]絶対値</h2>
<h4>絶対値を求める</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>変数名</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>Number</td><td>絶対値を求める数</td></tr>
<tr><td>cast</td><td></td><td>出来るだけ数値変換</td><td></td><td>値をセットする際の型。（詳細は[let]を参照）</td></tr>
</table>

</p>


<h2 id="let_char_at" class="w-heading">[let_char_at] 文字列から一字取りだし</h2>
<h4>文字列中の一文字を取り出す</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>変数名</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>元になる文字列</td></tr>
<tr><td>pos</td><td></td><td>0</td><td>0（先頭）〜</td><td>何番目の文字を取り出すか</td></tr>
<tr><td>cast</td><td></td><td>出来るだけ数値変換</td><td></td><td>値をセットする際の型。（詳細は[let]を参照）</td></tr>
</table>

</p>


<h2 id="let_index_of" class="w-heading">[let_index_of]文字列で検索</h2>
<h4>文字列内を検索し、文字列内の start 以降で、最初に val が見つかった位置を返します。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>位置を代入する変数名。-1の場合は見つからなかった</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>元になる文字列</td></tr>
<tr class="y"><td>val</td><td>y</td><td></td><td>String</td><td>探す文字列</td></tr>
<tr><td>start</td><td></td><td>0</td><td>0（先頭）〜</td><td>検索を開始する位置</td></tr>
<tr><td>cast</td><td></td><td>出来るだけ数値変換</td><td></td><td>値をセットする際の型。（詳細は[let]を参照）</td></tr>
</table>

</p>


<h2 id="let_length" class="w-heading">[let_length]文字列の長さ</h2>
<h4>文字列の長さを求める</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>長さを代入する変数名</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>長さを求める文字列。長さをセットする</td></tr>
<tr><td>cast</td><td></td><td>出来るだけ数値変換</td><td></td><td>値をセットする際の型。（詳細は[let]を参照）</td></tr>
</table>

</p>
<h2 id="let_ml" class="w-heading">[let_ml]インラインテキスト代入</h2>
<h4>[let_ml]〜[endlet_ml]で囲んだ複数行テキストを代入する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>変数名</td></tr>
</table>

</p>
<h2 id="let_replace" class="w-heading">[let_replace]正規表現で置換</h2>
<h4>文字列を正規表現で検索し、マッチする箇所を文字列で置き換える。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>変数名</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>置換対象の文字列</td></tr>
<tr class="y"><td>reg</td><td>y</td><td></td><td>String</td><td>正規表現</td></tr>
<tr><td>flags</td><td></td><td>（なし）</td><td>String</td><td>正規表現のフラグ</td></tr>
<tr class="y"><td>val</td><td>y</td><td></td><td>String</td><td>置き換える文字列</td></tr>
<tr><td>cast</td><td></td><td>出来るだけ数値変換</td><td></td><td>値をセットする際の型。（詳細は[let]を参照）</td></tr>
</table>

</p>
<h2 id="let_round" class="w-heading">[let_round]四捨五入</h2>
<h4>四捨五入する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>変数名</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>Number</td><td>四捨五入する数</td></tr>
<tr><td>cast</td><td></td><td>出来るだけ数値変換</td><td></td><td>値をセットする際の型。（詳細は[let]を参照）</td></tr>
</table>

</p>
<h2 id="let_search" class="w-heading">[let_search]正規表現で検索</h2>
<h4>文字列内を正規表現で検索し、最初に val が見つかった位置を返します。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>変数名</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>検索対象の文字列</td></tr>
<tr class="y"><td>reg</td><td>y</td><td></td><td>String</td><td>正規表現</td></tr>
<tr><td>flags</td><td></td><td>（なし）</td><td>String</td><td>正規表現のフラグ</td></tr>
<tr><td>cast</td><td></td><td>出来るだけ数値変換</td><td></td><td>値をセットする際の型。（詳細は[let]を参照）</td></tr>
</table>

</p>
<h2 id="let_substr" class="w-heading">[let_substr] 文字列から抜きだし</h2>
<h4>文字列の一部を取り出す</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>String（変数名書式※）</td><td>変数名</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>元になる文字列</td></tr>
<tr><td>pos</td><td></td><td>0</td><td>0（先頭）〜<br>または<br>〜-1（末尾）</td><td>何番目の文字から取り出すか。<br>負の値なら「後ろから何個目か」。-1が最後の文字。<br>【pos=-3 len=all】とすると、後ろから３文字を取り出す。</td></tr>
<tr><td>len</td><td></td><td>1</td><td>文字数、または all</td><td>何文字取り出すか。all でpos以降の全て</td></tr>
<tr><td>cast</td><td></td><td>出来るだけ数値変換</td><td></td><td>値をセットする際の型。（詳細は[let]を参照）</td></tr>
</table>

</p>


<h1><a id="レイヤ共通"></a>レイヤ共通</h1>
<h2 id="add_lay" class="w-heading">[add_lay]レイヤを追加する</h2>
<h4>レイヤを追加する。</h4>
<p class="mb2 px1">

レイヤはページの裏表があり、文字レイヤや画像レイヤなどの種類があります。<br>
レイヤの追加と同時に、[lay]に指定できる属性を指定できます。（内部的に[lay]を呼ぶ）<br>
これにより、[add_lay visible=false ...]等とすると、非表示状態でレイヤ追加できます。

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>layer</td><td>y</td><td></td><td>String</td><td>レイヤ名を指定する。<br>未使用のレイヤ名でなければエラー＆アプリ停止</td></tr>
<tr class="y"><td>class</td><td>y</td><td></td><td>grp（画像レイヤ）、<br>txt（文字レイヤ）、<br>またはプラグインで追加した値</td><td>レイヤの種類</td></tr>
<tr><td colspan="3">（その他）</td><td colspan="2">[lay]に指定できる属性</td></tr>
</table>

</p>


<h2 id="clear_lay" class="w-heading">[clear_lay]レイヤ設定の消去</h2>
<h4>画像や文字などレイヤ状態をクリアする。</h4>
<p class="mb2 px1">

<p>alpha、blendMode、rotation、scaleX、scaleYを初期値にする<br>
	※背景や背景画像はクリアしません（b_left、b_top、b_width、b_height、b_color、b_alpha）
	　クリアしたい場合は、[lay back_clear=true]</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>全てのレイヤ</td><td>レイヤ名（半角カンマ区切りで複数レイヤを指定可能）</td><td></td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back、both</td><td>ページの裏表（both指定で両面）</td></tr>
<tr><td>filter</td><td></td><td>false</td><td>Boolean</td><td>true：フィルタもクリア</td></tr>
</table>

</p>


<h2 id="finish_trans" class="w-heading">[finish_trans] トランス強制終了</h2>
<p>引数無し。<br>
	<p class="mb2 px1">

[trans]で開始したトランス終了を待たず、すぐ終了させる。<br>
	終了次第、スクリプト処理を次へ進める</p>

</p>


<h2 id="lay" class="w-heading">[lay]レイヤ設定(共通)</h2>
<h4>レイヤに各種設定を行う。</h4>
<p class="mb2 px1">

<p>レイヤの種類ごとに使用できる属性が違う</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>layer</td><td>y</td><td></td><td>レイヤ名</td><td>処理対象のレイヤ</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
<tr><td>visible</td><td></td><td>現在値</td><td>Boolean</td><td>true：表示、false：非表示</td></tr>
<tr><td>alpha</td><td></td><td>1.0</td><td>0.0〜1.0（実数）</td><td>レイヤの透過度。0（完全透明）〜0.5（半透明）〜1（不透明）</td></tr>
<tr><td>blendmode</td><td></td><td>何もしない</td><td>ブレンドモード名（"screen"など）</td><td>このレイヤと下のレイヤとの重なりにおいて、<br>ドット単位で色のブレンド演算を行なう。<br>詳細は<a href="#clearvar">blendModeの解説</a>を参照。</td></tr>
<tr><td>pos</td><td></td><td>c※</td><td>c、l、r、横座標</td><td>主に立ち絵に使う。横と縦座標を同時に設定する。<br>横座標は指定した値（文字cの場合は画面中央、lは左寄り、rは右寄り）に設定し、画像下端を画面下端に接するように自動計算する。</td></tr>
<tr><td>left</td><td></td><td>0</td><td>画面左上を(0, 0)とする横座標※</td><td>レイヤやボタン左端の画面左端からの距離</td></tr>
<tr><td>center</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>レイヤやボタン中央の画面左端からの距離</td></tr>
<tr><td>right</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>レイヤやボタン右端の画面左端からの距離</td></tr>
<tr><td>s_right</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>レイヤやボタン右端の画面右端からの距離</td></tr>
<tr><td>top</td><td></td><td>0</td><td>画面左上を(0, 0)とする縦座標※</td><td>レイヤやボタン上端の画面上端からの距離</td></tr>
<tr><td>middle</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>レイヤやボタン中央の画面上端からの距離</td></tr>
<tr><td>bottom</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>レイヤやボタン下端の画面上端からの距離</td></tr>
<tr><td>s_bottom</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>レイヤやボタン下端の画面下端からの距離</td></tr>
<tr><td>rotation</td><td></td><td>0</td><td>-180〜180</td><td>回転角を度単位で指定。時計回りは0～180、反時計回りは0～-180を指定。 左上を中心に回る</td></tr>
<tr><td>scale_x</td><td></td><td>1.0</td><td>正負の実数値</td><td>横方向を何倍に拡大／縮小するか。負の値ならレイヤを左右反転</td></tr>
<tr><td>scale_y</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>縦方向を何倍に拡大／縮小するか。負の値ならレイヤを上下反転</td></tr>
<tr><td>float</td><td></td><td>何もしない</td><td>Boolean</td><td>true：レイヤを最前面に移動する。<br>※最前面とは、Flashのstage.addChildにおける重なり順</td></tr>
<tr><td>index</td><td></td><td>何もしない</td><td>0〜</td><td>レイヤをindexで指定したインデックスに移動する。<br>※インデックスは、FlashのStage.setChildIndex()を参照。</td></tr>
<tr><td>dive</td><td></td><td>何もしない</td><td>レイヤ名</td><td>レイヤをdiveで指定したレイヤのすぐ後ろに潜り込ませる。<br>「plg:プラグイン名」と記述する事でプラグインも指定できる。</td></tr>
</table>

</p>


<h2 id="blendMode" class="w-heading">blendModeの解説</h2>
<p class="mb2 px1">

	<span style="color: red;">暫定版です、SKYNovelで指定できる値については追って記述します（_ _）</span>

<table><tr><th>Photoshop ブレンドモード名</th><th>AIRNovel での blendmode 属性の値</th><th>ActionScript での blendmode 値</th><th>コメント</th></tr>
<tr><td>加算</td><td>（使えない）</td><td>add</td><td>
	表示オブジェクトの要素カラーの値を背景色に加算し、その際に上限 0xFF を適用します。
</td></tr>
<tr><td>アルファ</td><td>（使えない）</td><td>alpha</td><td>
	表示オブジェクトの各ピクセルのアルファ値を背景に適用します。
</td></tr>
<tr class="success"><td>比較 (暗)</td><td>この値→</td><td>darken</td><td>
	表示オブジェクトの要素カラーと背景色のうち暗い方（値が小さい方）の色を選択します。
</td></tr>
<tr class="success"><td>差の絶対値</td><td>この値→</td><td>difference</td><td>表示オブジェクトの各ピクセルのアルファ値を
	背景に適用します。</td></tr>
<tr><td>消去</td><td>（使えない）</td><td>erase</td><td>
	表示オブジェクトのアルファ値に基づいて背景を消去します。
</td></tr>
<tr class="success"><td>ハードライト</td><td>この値→</td><td>hardlight</td><td>
	表示オブジェクトの暗さに基づいて、各ピクセルの色を調整します。
</td></tr>
<tr><td>反転</td><td>（使えない）</td><td>invert</td><td>
	背景を反転します。
</td></tr>
<tr><td>（なし）</td><td>（使えない）</td><td>layer</td><td>
	表示オブジェクトに関する透明度グループを強制的に作成します。
</td></tr>
<tr class="success"><td>比較 (明)</td><td>この値→</td><td>lighten</td><td>
	表示オブジェクトの要素カラーと背景色のうち明るい方（値が大きい方）の色を選択します。
</td></tr>
<tr class="success"><td>乗算</td><td>この値→</td><td>multiply</td><td>
	表示オブジェクトの要素カラーの値と背景色の要素カラーの値を乗算した後、0xFF で割って正規化し、色を暗くします。
</td></tr>
<tr class="success"><td>標準</td><td>この値→</td><td>normal</td><td>
	表示オブジェクトは、背景の前に表示されます。（なにもしない）
</td></tr>
<tr class="success"><td>オーバーレイ</td><td>この値→</td><td>overlay</td><td>
	背景の暗さに基づいて、各ピクセルの色を調整します。
</td></tr>
<tr class="success"><td>スクリーン</td><td>この値→</td><td>screen</td><td>
	表示オブジェクトの色の補数（逆）と背景色の補数を乗算して、ブリーチ効果を得ます。
</td></tr>
<tr><td>（なし）</td><td>（使えない）</td><td>shader</td><td>
	シェーダーを使用して、オブジェクト間のブレンドを定義します。
</td></tr>
<tr><td>減算</td><td>（使えない）</td><td>subtract</td><td>
	結果の下限を 0 として、表示オブジェクトの要素カラーの値をその背景色の値から減算します。
</td></tr>
</table>

</p>


<h2 id="txtlay" class="w-heading">[lay]レイヤ設定(文字レイヤ)</h2>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>max_col</td><td></td><td>現在値</td><td>1〜</td><td>ページあたりの表示列数（横書き時は上から下、縦書き時は右から左へ数える）<br>改行・禁則処理に使用。実際に文字が表示されるかは、フォントサイズや表示位置との兼ね合いによる。<br>初期値は 10</td></tr>
<tr><td>max_row</td><td></td><td>現在値</td><td>1〜</td><td>ページあたりの表示行数。初期値は 10</td></tr>
<tr><td>bura_col</td><td></td><td>現在値</td><td>0〜</td><td>禁則時ぶら下がり文字数。初期値は 2</td></tr>
<tr><td>chk_overrow</td><td></td><td>現在値</td><td>Boolean</td><td>true：カーソルがmax_rowを超えたらエラー＆停止（初期値）<br>false：表示行数を越える直前に自動改ページ</td></tr>
<tr><td>b_left</td><td></td><td>現在値</td><td>画面左上を(0, 0)とする座標</td><td>テキスト背後の矩形表示位置。<br>初期値はそれぞれ 16 16</td></tr>
<tr><td>b_top</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>(↑と同じ)</td></tr>
<tr><td>b_width</td><td></td><td>(↑と同じ)</td><td>矩形表示縦横ピクセル数</td><td>テキスト背後の矩形表示縦横サイズ。<br>初期値はそれぞれ（画面横幅 - b_left *2）（画面縦幅 - b_top *2）</td></tr>
<tr><td>b_height</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>(↑と同じ)</td></tr>
<tr><td>b_color</td><td></td><td>(↑と同じ)</td><td>色指定。0x000000など</td><td>テキスト背後の矩形色。初期値は 0x000000（黒）</td></tr>
<tr><td>b_alpha</td><td></td><td>(↑と同じ)</td><td>実数：0.0（透明）〜1.0（不透過）</td><td>テキスト背後の矩形不透明度。<br>表示しない場合は0を指定。初期値は 0</td></tr>
<tr><td>b_pic</td><td></td><td>(↑と同じ)</td><td>画像ファイル名</td><td>文字レイヤ背後の枠画像を指定する。b_top、b_left、b_alphaの影響を受ける。<br>（これを指定するとb_colorは無視される）</td></tr>
<tr><td>back_clear</td><td></td><td>現在値</td><td>Boolean</td><td>true：背景をクリアする</td></tr>
<tr><td>b_alpha_isfixed</td><td></td><td>現在値</td><td>Boolean</td><td>true：テキスト背後の矩形不透明度を、「b_alpha属性と sys:TextLayer.Back.Alpha の掛け算とせず」、b_alpha属性値そのものにする。（これは2017/2/13以前の仕様）</td></tr>
<tr><td>draggable</td><td></td><td>false</td><td>Boolean</td><td>true：テキスト背後の矩形をドラッグできる</td></tr>
<tr><td>drag_x</td><td></td><td>0</td><td>画面左上を(0, 0)とする座標</td><td>ドラッグ範囲の左上始点。</td></tr>
<tr><td>drag_y</td><td></td><td>0</td><td>(↑と同じ)</td><td>(↑と同じ)</td></tr>
<tr><td>drag_w</td><td></td><td>画面横幅</td><td>ドラッグ範囲縦横ピクセル数</td><td>ドラッグ範囲縦横サイズ。</td></tr>
<tr><td>drag_h</td><td></td><td>画面縦幅</td><td>(↑と同じ)</td><td>(↑と同じ)</td></tr>
<tr><td>dragmove_fn</td><td>...</td><td>...</td><td>...</td><td>ドラッグ中にサブルーチンコールする先。<br>指定方法は[jump]と同様</td></tr>
<tr><td>dragmove_label</td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>(↑と同じ)</td></tr>
<tr><td>dragmove_arg</td><td></td><td></td><td>String</td><td>指定した場合、ドラッグ中コール先で「&amp;const.an.eventArg」にて値を受け取れる</td></tr>
<tr><td>h_scroll</td><td></td><td></td><td>ピクセル数</td><td>横スクロールさせる量</td></tr>
<tr><td>v_scroll</td><td></td><td></td><td>ピクセル数</td><td>縦スクロールさせる量</td></tr>
<tr><td>mouse_wheel_enabled</td><td></td><td></td><td>Boolean</td><td>マウスホイールでスクロール許可するか否か</td></tr>
<tr><td>layout</td><td></td><td>現在値</td><td>String</td><td>文字レイヤのレイアウトを指定する。<br>文法はFlex SDK 4のTLF (Text Layout Framework)・TextFlowのXML指定による。<br>※「TLFのXML指定」と言われても良く判らないでしょうし、こちらのサイト（Text
	Layout Editor Demo Application - Adobe Labs）で色々いじってみて、下の【Markup...】ボタンで出てくるXMLを参考にして下さい。<br><br>このlayoutという属性の中にTLF属性群を入れ子状に記述する。<br>例えば、blockProgressionで縦書き・横書きを指定できる。<br>設定しないTLF属性は現在値を継続する。<br>初期値は空（から）、全くの未指定。<br><br>駆使すると、「文字表示領域矩形内に自動で文字を並べる」事なども出来ます</td></tr>
<tr><td>onend</td><td></td><td>現在値</td><td>（コメントで解説）</td><td>行末禁則処理を指定する。（全文字レイヤで設定を共有）<br>warning …… 行末禁則・Warning処理<br>nop …… 何もしない<br>enter …… 行末禁則・追い込み処理<br>leave ……
	行末禁則・追い出し処理（初期値）</td></tr>
<tr><td>end</td><td></td><td>現在値</td><td>String</td><td>行末禁則処理対象の文字群を指定する。（全文字レイヤで設定を共有）<br>初期値は……［（｛〈「『【〔“〝</td></tr>
<tr><td>bura</td><td></td><td>現在値</td><td>String</td><td>ぶら下がり処理対象の文字群を指定する。（全文字レイヤで設定を共有）<br>「、」「。」などを連結した文字列。<br>初期値は……<br>、。，．）］｝〉」』】〕”〟ぁぃぅぇぉっゃゅょゎァィゥェォッャュョヮヵヶ！？!?‼⁉・ーゝゞヽヾ々<br>onsplit</td></tr>
<tr><td>dont_sprit</td><td></td><td>現在値</td><td>String</td><td>分割禁止処理対象の文字群を指定する。（全文字レイヤで設定を共有）<br>初期値は「─（ダーシ）」「‥（二点リーダ）」「…（三点リーダ）」</td></tr>
<tr><td>r_color</td><td></td><td>現在値</td><td>色指定。0x000000など</td><td>ルビの文字色。初期値は 0xFFFFFF</td></tr>
<tr><td>r_size</td><td></td><td>現在値</td><td>1〜</td><td>ルビ文字サイズ。初期値は 12</td></tr>
<tr><td>r_shift</td><td></td><td>現在値</td><td>正負の整数</td><td>ルビ文字を親文字から何ピクセル離すか。<br>値の正負と縦書き横書きの関係は、TLFのBaselineShiftに従う。初期値は 0</td></tr>
<tr><td>r_align</td><td></td><td>現在値</td><td>（コメントで解説）</td><td>ルビ揃えを指定する。<br>left ……（肩付き）先頭親文字から、ルビ間は密着<br>center ……（中付き）センター合わせ、〃<br>right ……（右／下揃え）末尾親文字から、〃<br>justify
	……（両端揃え）先頭から末尾親文字間に、ルビ間は均等にあける<br>121 ……（1-2-1(JIS)）ルビの前後を比率1、ルビ間を比率2であける<br>even ……（均等アキ）ルビの前後、ルビ間も均等にあける<br>1ruby
	……（1ルビ文字アキ）ルビの前後をルビ一文字空け、ルビ間は均等にあける<br><br>初期値は center。<br><br>※leftやright以外において、親文字よりルビの方が長い場合は、親文字に対する「中付き」表示になる</td></tr>
</table>

</p>


<h2 id="grplay" class="w-heading">[lay]レイヤ設定(画像レイヤ)</h2>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>fn</td><td>y</td><td>何もしない</td><td>画像ファイル名</td><td>基本画像ファイルを指定する</td></tr>
<tr><td>face</td><td></td><td>何もしない</td><td>[add_face]で登録した差分画像（半角カンマ区切りで複数可能）</td><td>差分画像ファイルを指定する。<br>[fg fn="a" face="b,c,d"]なら「基本a」の上に「差分b」を重ね、「差分c」を重ね、「差分d」を重ねる。<br><br>【注意】fnは同じでface属性だけを指定→指定なしにした場合、表示が変わりませんが不具合ではありません。
	「face属性指定なし」は「何もしない」、つまり変化させないからです。<br>[fg layer=upd fn="a" face="b"]<br>[l]<br>[fg layer=upd fn="a"]<br>[l]<br><br>差分画像を無くしたい場合、明確に空文字（""）を指定します。<br>[fg
	layer=upd fn="a" face="b"]<br>[l]<br>[fg layer=upd fn="a" face=""]<br>[l]</td></tr>
<tr><td>draggable</td><td></td><td>false</td><td>Boolean</td><td>true：テキスト背後の矩形をドラッグできる</td></tr>
<tr><td>drag_x</td><td></td><td>0</td><td>画面左上を(0, 0)とする座標</td><td>ドラッグ範囲の左上始点。</td></tr>
<tr><td>drag_y</td><td></td><td>0</td><td>(↑と同じ)</td><td>(↑と同じ)</td></tr>
<tr><td>drag_w</td><td></td><td>画面横幅</td><td>ドラッグ範囲縦横ピクセル数</td><td>ドラッグ範囲縦横サイズ。</td></tr>
<tr><td>drag_h</td><td></td><td>画面縦幅</td><td>(↑と同じ)</td><td>(↑と同じ)</td></tr>
<tr><td>dragmove_fn</td><td>...</td><td>...</td><td>...</td><td>ドラッグ中にサブルーチンコールする先。<br>指定方法は[jump]と同様</td></tr>
<tr><td>dragmove_label</td><td>...</td><td>...</td><td>...</td><td>(↑と同じ)</td></tr>
<tr><td>dragmove_arg</td><td></td><td></td><td>String</td><td>指定した場合、ドラッグ中コール先で「&amp;const.an.eventArg」にて値を受け取れる</td></tr>
</table>

</p>


<h2 id="trans" class="w-heading">[trans]ページ裏表を交換</h2>
<h4>裏ページを表ページとクロスフェードする。</h4>
<p class="mb2 px1">

<p>クロスフェードを開始すると、終了を待たずに次のタグへと処理を進める。<br>
	終了を待ちたい場合は[wt]を使用する。<br>
	<br>
	クロスフェード終了後は元・裏ページから元・表ページに内容をコピーし、同じ内容になる。<br>
	<br>
	ルール画像は白黒かグレースケールを推奨。（見た目と動きが一致する）<br>
	また[trans]～[wt]間で文字表示や[ch]は動作未定義、非推奨。<br>
	[trans]終了を待たず何かをするのは避けた方がよいでしょう。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>全てのレイヤ</td><td>処理対象レイヤ名（カンマ区切りで複数可能）</td><td>クロスフェードするレイヤ。指定以外のレイヤは変化させない</td></tr>
<tr><td>time</td><td></td><td>0</td><td>ミリ秒</td><td>変化にかける時間</td></tr>
<tr><td>delay</td><td></td><td>0</td><td>ミリ秒</td><td>変化する前に待機する遅延時間</td></tr>
<tr><td>rule</td><td></td><td>画面全体ピクセルで同時にクロスフェードする</td><td>画像ファイル名（swf不可）</td><td>指定した場合はルール画像として、ピクセル単位でクロスフェードするタイミングをずらす。<br>ルール画像の黒いピクセル（と同じ位置にあるピクセル）が先に処理され、白が最後になる。</td></tr>
<tr><td>vague</td><td></td><td>0.04</td><td>トランジション期間全体を1とした値</td><td>表レイヤと裏レイヤの境界を曖昧にぼかす度合い</td></tr>
<tr><td>light</td><td></td><td>false</td><td>Boolean</td><td>少々ギザギザだが処理が軽い方法でクロスフェードするか</td></tr>
<tr><td>c_plugin</td><td></td><td>何もしない</td><td>処理対象プラグイン名（カンマ区切りで複数可能）</td><td>指定したプラグインの可視状態が[trans]で変化するようになる。表示非表示が切り替わる。ただしクロスフェード中はアニメが止まる</td></tr>
</table>

</p>
<h2 id="wt" class="w-heading">[wt]トランス終了待ち</h2>
<h4>[trans]で開始したトランスの終了を待つ。</h4>
<p class="mb2 px1">

<p>終了次第、スクリプト処理を次へ進める。<br>
	<br>
	また[trans]～[wt]間で文字表示や[ch]は動作未定義、非推奨。<br>
	[trans]終了を待たず何かをするのは避けた方がよいでしょう<br></p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>canskip</td><td></td><td>true</td><td>Boolean</td><td>trueでクリックキャンセル可能にする。</td></tr>
</table>

</p>


<h1><a id="レイヤトゥイーンレイヤトゥイーン"></a>レイヤトゥイーン</h1>
<h2 id="pause_tsy" class="w-heading">[pause_tsy]一時停止</h2>
<h4>[tsy]を一時停止させる</h4>
<p class="mb2 px1">

	<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr><tr class="y"><td>layer</td><td rowspan="3">y</td><td></td><td>レイヤ名</td><td>処理対象のレイヤ</td></tr><tr class="y"><td>page</td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr><tr class="y"><td>plugin</td><td></td><td>プラグイン名</td><td>処理対象のプラグイン</td></tr></table>

</p>
<h2 id="resume_tsy" class="w-heading">[resume_tsy]一時停止再開</h2>
<h4>[tsy]一時停止を再開させる</h4>
<p class="mb2 px1">

	<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr><tr class="y"><td>layer</td><td rowspan="3">y</td><td></td><td>レイヤ名</td><td>処理対象のレイヤ</td></tr><tr class="y"><td>page</td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr><tr class="y"><td>plugin</td><td></td><td>プラグイン名</td><td>処理対象のプラグイン</td></tr></table>

</p>
<h2 id="stop_tsy" class="w-heading">[stop_tsy]トゥイーン中断</h2>
<p class="mb2 px1">

	<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr><tr class="y"><td>layer</td><td rowspan="3">y</td><td></td><td>レイヤ名</td><td>処理対象のレイヤ</td></tr><tr class="y"><td>page</td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr><tr class="y"><td>plugin</td><td></td><td>プラグイン名</td><td>処理対象のプラグイン</td></tr><tr><td>arrive</td><td>n</td><td>false</td><td>Boolean</td><td>trueならクリックキャンセルでアニメ終端までSkip。<br>falseならその場で停止</td></tr><tr><td>backlay</td><td>n</td><td>false</td><td>Boolean</td><td>trueならトゥイーン終了時、fore→backへ属性をコピーする。<br>コピーする属性はalpha, height, rotation, scaleX, scaleY, width, x, y。<br>（rotationX〜Z、scaleZ、zは設定すると三次元方向の拡大縮小ルーチンが働き画像がぼやけるのでbacklayで設定しない方針）</td></tr></table>

</p>
<h2 id="tsy" class="w-heading">[tsy]トゥイーン開始</h2>
<h4>レイヤーにトゥイーンアニメ（変形・移動・回転アニメーション）を加える。</h4>
<p class="mb2 px1">

	「目標値」を設定する時、相対値あるいは絶対値を指定できる。「x=10」は絶対値、「x='=10'」は現在値からの相対値。
	またある値域でランダムな絶対値を指定することも出来る。「x='250,500'」だと250から500までの間でランダムなXとする

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr><tr class="y"><td>layer</td><td rowspan="3">y</td><td></td><td>レイヤ名</td><td>処理対象のレイヤ</td></tr><tr class="y"><td>page</td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr><tr class="y"><td>plugin</td><td></td><td>プラグイン名</td><td>処理対象のプラグイン</td></tr><tr><td>delay</td><td>n</td><td>0</td><td>ミリ秒数</td><td>トゥイーンを始める前の、何もしない待ち時間</td></tr><tr class="y"><td>time</td><td>y</td><td></td><td>ミリ秒数</td><td>トゥイーンを始める前の、何もしない待ち時間</td></tr><tr class="y"><td>alpha</td><td rowspan="13">いずれかを指定</td><td rowspan="13">何もしない</td><td rowspan="13">ミリ秒数</td><td rowspan="10">同名属性の変化目標値。<br>詳細は<a href="http://goo.gl/hfDHaJ" target="_blank">DisplayObject</a>の解説を参照</td></tr><tr class="y"><td>height</td></tr><tr class="y"><td>rotation</td></tr><tr class="y"><td>rotationX</td></tr><tr class="y"><td>rotationY</td></tr><tr class="y"><td>rotationZ</td></tr><tr class="y"><td>scaleX</td></tr><tr class="y"><td>scaleY</td></tr><tr class="y"><td>scaleZ</td></tr><tr class="y"><td>width</td></tr><tr class="y"><td>x</td><td>leftの変化目標値</td></tr><tr class="y"><td>y</td><td>topの変化目標値</td></tr><tr class="y"><td>z</td><td>同名属性の変化目標値</td></tr><tr><td>ease</td><td>n</td><td>イージング無し</td><td>（同右）</td><td>揺れのイージング（値の変化の仕方）を指定する。<br><a href="http://hosted.zeh.com.br/tweener/docs/en-us/misc/transitions.html" target="_blank">イージングの変化はこちらの図</a>が分かりやすい。<br>指定できる値は以下の通り。<br>Back.easeIn、Back.easeInOut、Back.easeOut<br>Bounce.easeIn、Bounce.easeInOut、Bounce.easeOut<br>Circular.easeIn、Circular.easeInOut、Circular.easeOut<br>Cubic.easeIn、Cubic.easeInOut、Cubic.easeOut<br>Elastic.easeIn、Elastic.easeInOut、Elastic.easeOut<br>Exponential.easeIn、Exponential.easeInOut、Exponential.easeOut<br>Linear.easeIn、Linear.easeInOut、Linear.easeNone、Linear.easeOut<br>Quadratic.easeIn、Quadratic.easeInOut、Quadratic.easeOut<br>Quartic.easeIn、Quartic.easeInOut、Quartic.easeOut<br>Quintic.easeIn、Quintic.easeInOut、Quintic.easeOut<br>Sine.easeIn、Sine.easeInOut、Sine.easeOut</td></tr><tr><td>repeats</td><td>n</td><td>1</td><td>0（無限ループ）〜</td><td></td></tr></table>

</p>
<h2 id="wait_tsy" class="w-heading">[wait_tsy]トゥイーン終了待ち</h2>
<h4>[tsy]トゥイーンの終了を待ち、再開する。</h4>
<p class="mb2 px1">

[event]などでイベントが登録されていても、イベント発生待ちを行わない。
繰返し回数が0（無限ループ）の場合、何もせず終了する

	<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr><tr class="y"><td>layer</td><td rowspan="3">y</td><td></td><td>レイヤ名</td><td>処理対象のレイヤ</td></tr><tr class="y"><td>page</td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr><tr class="y"><td>plugin</td><td></td><td>プラグイン名</td><td>処理対象のプラグイン</td></tr><tr><td>arrive</td><td>n</td><td>false</td><td>Boolean</td><td>trueならクリックキャンセルでアニメ終端までSkip。<br>falseならその場で停止</td></tr><tr><td>backlay</td><td>n</td><td>false</td><td>Boolean</td><td>trueならトゥイーン終了時、fore→backへ属性をコピーする。<br>コピーする属性はalpha, height, rotation, scaleX, scaleY, width, x, y。<br>（rotationX〜Z、scaleZ、zは設定すると三次元方向の拡大縮小ルーチンが働き画像がぼやけるのでbacklayで設定しない方針）</td></tr><tr><td>canskip</td><td>n</td><td>true</td><td>Boolean</td><td>クリックなど（→詳細は<a href="http://famibee.web.fc2.com/tag_dev/tags.htm#waitclick" target="_blank">[waitclick]</a>）でウエイトをキャンセルできるか</td></tr></table>

</p>


<h1><a id="文字文字レイヤ文字文字レイヤ"></a>文字・文字レイヤ</h1>
<h2 id="autowc" class="w-heading">[autowc]文字ごとのウェイト</h2>
<h4>特定の文字の直後に自動的にウェイトを入れる。</h4>
<p class="mb2 px1">

<p>textに指定した文字に対し、timeに指定した数値が対応する。<br>
	通常の文字表示速度にtimeの数値を掛け算する。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>enabled</td><td></td><td>現在値</td><td>Boolean</td><td>自動ウェイトを有効にするか</td></tr>
<tr><td>text</td><td>両方同時に指定、或いは省略</td><td>現在値</td><td>String</td><td>ウェイトを指定する文字の集まり</td></tr>
<tr><td>time</td><td>(↑と同じ)</td><td>現在値</td><td>カンマ区切りの数値</td><td>文字表示ウェイト倍数</td></tr>
</table>
<p>　以下のように指定する。<br>
	[autowc enabled=true text="４５６" time="50,100,150"]<br>
	[autowc enabled=true text="４５６" time="100,100,100"]<br>
	[autowc enabled=false]</p>
<p>　以下はエラーとなる。<br>
	;x [autowc enabled=true text="４５６" time="100,100"]<br>
	;x [autowc enabled=true text="４５６" time="100,100,100,100"]<br>
	;x [autowc enabled=true text="４５６"]<br>
	;x [autowc enabled=true time="100,100,100"]<br>
	;x [autowc enabled=true]<br>
	;x [autowc enabled=true text="" time=""]<br>
	;x [autowc text="" time=""]</p>

</p>


<h2 id="ch" class="w-heading">[ch]文字を追加する</h2>
<h4>文字レイヤに文字を出力する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>文字を表示するレイヤ</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>表示したい文字列。ルビ文法（《》）も解析する。改行も [r] で出来る</td></tr>
<tr><td>record</td><td></td><td>true</td><td>Boolean</td><td>履歴に保存するか</td></tr>
<tr><td>wait</td><td></td><td>現在の文字表示速度</td><td>ミリ秒</td><td>一時的な文字表示速度。0で瞬時。<br>何らかのキー押下やマウスクリックで全てを瞬時表示する</td></tr>
<tr><td>join</td><td></td><td>true</td><td>Boolean</td><td>trueで読み込みを待って次のタグへ進む。</td></tr>
</table>
<p>[ch]を使わない、より簡潔な記述文法があります。（ver 3.18以降）<br>
	以下の記述は、<br>
	[ch text=&amp;test]<br>
	[ch text=test]<br>
	[ch text="&amp;a + b"]<br>
	<br>
	以下のようにも書けます。&amp;から&amp;までを[ch]文と解釈します。<br>
	&amp;test&amp;<br>
	&amp;'test'&amp;<br>
	&amp;a + b&amp;</p>

</p>


<h2 id="clear_text" class="w-heading">[clear_text]文字消去</h2>
<h4>文字のみをクリアする</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>文字を表示するレイヤ</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
</table>

</p>


<h2 id="current" class="w-heading">[current] デフォルト文字レイヤ設定</h2>
<h4>デフォルト文字レイヤを設定する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>layer</td><td>y</td><td></td><td>文字レイヤ名</td><td>デフォルトとするレイヤ</td></tr>
</table>

</p>


<h2 id="endlink" class="w-heading">[endlink]ハイパーリンクの終了</h2>
<h4>[link]（ハイパーリンク）で開始したリンク区間を終了する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>文字を表示するレイヤ</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
</table>

</p>


<h2 id="er" class="w-heading">[er]ページ両面の文字消去</h2>
<h4>デフォルト文字レイヤの裏と表の両方に対して[clear_lay]を行う。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>rec_page_break</td><td></td><td>true</td><td>Boolean</td><td>履歴を改ページするか</td></tr>
</table>

</p>


<h2 id="graph" class="w-heading">[graph]インライン画像表示</h2>
<h4>文字レイヤに画像を文字として表示する。ルビは同時に設定する。</h4>
<p class="mb2 px1">

<p>フォントにない外字やswfアニメ画像表示に使える。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>文字を表示するレイヤ</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
<tr class="y"><td>pic</td><td>y</td><td></td><td>画像ファイル名</td><td>表示する画像やswf</td></tr>
<tr><td>r</td><td></td><td>ルビ無し</td><td>String</td><td>ルビ文字列（ただしあまりに他の文字サイズと大きく異なる場合は正しい位置に表示されない）</td></tr>
<tr><td>width</td><td></td><td>画像の横サイズ（※）</td><td>1〜</td><td>表示する画像の横ドットサイズ。<br>元のサイズと異なる場合は拡大・縮小される。</td></tr>
<tr><td>height</td><td></td><td>画像の縦サイズ（※）</td><td>1〜</td><td>保存する画像の縦ドットサイズ。<br>元のサイズと異なる場合は拡大・縮小される。</td></tr>
</table>
<p>※省略時は画像サイズになるが、ロード完了直後に文字配置を決めるのでちらつく。それを嫌う際に指定する<br>
	※特にモバイルなどでゲーム画面が自動で拡大縮小される場合、省略したらその時の本文文字サイズとして扱われる。なるべくサイズ指定を推奨。</p>

</p>


<h2 id="link" class="w-heading">[link]ハイパーリンク</h2>
<h4>指定した文字レイヤの表ページに、ハイパーリンクを作成する。</h4>
<p class="mb2 px1">

<p>[link]から[endlink]（ハイパーリンクの終了）までで囲った範囲をリンク区間と呼び、<br>
	その区間の文字や縦中横がハイパーリンクになる。（リンク区間は入れ子に出来ません）<br>
	※選択肢として使用する場合、ジャンプ先のラベル直後には必ず[record_place]を記述して、ジャンプ直後でセーブしても正しくセーブされるようにして下さい。<br>
	ブラウザ実行時、ローカル版swfをブラウザで開いた場合はhref属性によるリンクジャンプが利きません。非ローカル版swfをサーバーに設置すれば動作します。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>文字を表示するレイヤ名</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
<tr><td>href</td><td></td><td>何もしない</td><td>URL</td><td>クリック時にブラウザで指定URLを開く</td></tr>
<tr><td>target</td><td></td><td>何もしない</td><td>HTML タグのtarget属性</td><td>hrefにてブラウザを開く際のtarget属性</td></tr>
<tr><td>f_color</td><td></td><td>0x8888FF</td><td>色指定。0x000000など</td><td>（リンク上にマウスがない状態）文字色</td></tr>
<tr><td>f_alpha</td><td></td><td>1.0（不透明）</td><td>0.0〜1.0（実数）</td><td>（リンク上にマウスがない状態）文字の透過度</td></tr>
<tr><td>f_ul</td><td></td><td>true</td><td>Boolean</td><td>（リンク上にマウスがない状態）trueの場合は文字に下線を引く</td></tr>
<tr><td>hf_color</td><td></td><td>0xFFFF00</td><td>色指定。0x000000など</td><td>（リンク上にマウスがある状態）文字色</td></tr>
<tr><td>hf_alpha</td><td></td><td>1.0（不透明）</td><td>0.0〜1.0（実数）</td><td>（リンク上にマウスがある状態）文字の透過度</td></tr>
<tr><td>hf_ul</td><td></td><td>false</td><td>Boolean</td><td>（リンク上にマウスがある状態）trueの場合は文字に下線を引く</td></tr>
<tr><td>af_color</td><td></td><td>0x8888FF</td><td>色指定。0x000000など</td><td>（リンクをマウス押下した状態）文字色</td></tr>
<tr><td>af_alpha</td><td></td><td>1.0（不透明）</td><td>0.0〜1.0（実数）</td><td>（リンクをマウス押下した状態）文字の透過度</td></tr>
<tr><td>af_ul</td><td></td><td>true</td><td>Boolean</td><td>（リンクをマウス押下した状態）trueの場合は文字に下線を引く</td></tr>
<tr><td>b_color</td><td></td><td>背景色なし</td><td>色指定。0x000000など</td><td>リンク背景色</td></tr>
<tr><td>b_alpha</td><td></td><td>1.0（不透明）</td><td>0.0〜1.0（実数）</td><td>リンク背景の透過度</td></tr>
<tr><td>hint</td><td></td><td></td><td>String</td><td>設定した場合のみ、マウスカーソルを載せるとヒントをチップス表示する</td></tr>
<tr><td>clickse</td><td></td><td>省略時は無音</td><td>効果音ファイル名</td><td>指定すると、クリック時に効果音を再生する</td></tr>
<tr><td>enterse</td><td></td><td>省略時は無音</td><td>効果音ファイル名</td><td>指定すると、ボタン上にマウスカーソルが載った時に効果音を再生する</td></tr>
<tr><td>leavese</td><td></td><td>省略時は無音</td><td>効果音ファイル名</td><td>指定すると、ボタン上からマウスカーソルが外れた時に効果音を再生する</td></tr>
<tr><td>clicksebuf</td><td></td><td>SYS</td><td>サウンドバッファ名</td><td>クリック時効果音を再生するサウンドバッファを指定する</td></tr>
<tr><td>entersebuf</td><td></td><td>SYS</td><td>サウンドバッファ名</td><td>クリック時効果音を再生するサウンドバッファを指定する</td></tr>
<tr><td>leavesebuf</td><td></td><td>SYS</td><td>サウンドバッファ名</td><td>クリック時効果音を再生するサウンドバッファを指定する</td></tr>
<tr><td>call</td><td></td><td>false</td><td>Boolean</td><td>trueの場合は[call]、falseは[jump]。<br>ただしcall=trueによりサブルーチンコールした場合、[return]によって「コールする前のイベント予約状態＆待ち状態」に戻る。</td></tr>
<tr><td>fn</td><td>...</td><td>...</td><td>...</td><td>クリック時にジャンプする先。<br>指定方法は[jump]と同様</td></tr>
<tr><td>label</td><td>...</td><td>...</td><td>...</td><td>(↑と同じ)</td></tr>
<tr><td>onenter</td><td></td><td>何もしない</td><td>ラベル名</td><td>マウス重なり（フォーカス取得）時、指定したラベルをコールする。 必ず[return]で戻ること。</td></tr>
<tr><td>onleave</td><td></td><td>何もしない</td><td>ラベル名</td><td>マウス重なり外れ（フォーカス外れ）時、指定したラベルをコールする。 必ず[return]で戻ること。</td></tr>
<tr><td>global</td><td></td><td>false</td><td>Boolean</td><td>詳細は[event]と同様。<br>※ボタンを[trans]する場合はtrueにしておく</td></tr>
<tr><td>arg</td><td></td><td></td><td>String</td><td>指定した場合、クリック時ジャンプ先で「&amp;const.an.eventArg」にて値を受け取れる</td></tr>
</table>

</p>


<h2 id="r" class="w-heading">[r] 改行</h2>
<h4>指定した文字レイヤの表ページに、改行を出力する。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>文字を表示するレイヤ名</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
</table>

</p>


<h2 id="rec_ch" class="w-heading">[rec_ch]履歴書き込み</h2>
<h4>履歴に改行を出力する。自動で改行を付加する。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>表示したい文字列。ルビ文法（《》）も解析する。</td></tr>
<tr><td>r</td><td></td><td>true</td><td>Boolean</td><td>trueなら改行する</td></tr>
</table>

</p>


<h2 id="rec_r" class="w-heading">[rec_r]履歴改行</h2>
<h4>履歴に改行を出力する。</h4>
<p class="mb2 px1">

<p>引数無し。</p>

</p>


<h2 id="reset_rec" class="w-heading">[reset_rec]履歴リセット</h2>
<h4>履歴をクリアする。</h4>
<p class="mb2 px1">

<p>応用として、履歴に加工した文字列を設定し、履歴画面に機能を追加する事も。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>text</td><td></td><td>全てクリア</td><td>String</td><td>履歴に設定したい文字列</td></tr>
</table>

</p>


<h2 id="ruby2" class="w-heading">[ruby2]文字列と複数ルビの追加</h2>
<h4>親文字列とルビ文字列のセットで文字を追加する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>文字を表示するレイヤ名</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
<tr class="y"><td>t</td><td>y</td><td></td><td>String</td><td>親文字列</td></tr>
<tr class="y"><td>r</td><td>y</td><td></td><td>String</td><td>ルビ文字列</td></tr>
</table>

</p>


<h2 id="set_focus" class="w-heading">[set_focus] 未作成：フォーカス移動</h2>
<h4>[button]フォーカスを移動する。</h4>
<p class="mb2 px1">

<p>説明に「フォーカス順」とある場合は、[button]が文字レイヤに追加された順番。<br>
	先頭は最初に追加された[button]。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>to</td><td>y</td><td></td><td>（コメントで解説）</td><td>prev……フォーカス順で前の[button]に移動<br>next……フォーカス順で次の[button]に移動<br>null……どの[button]にもフォーカスがない状態にする<br>数値……数値をフォーカス順の番号（0〜）として移動</td></tr>
</table>

</p>


<h2 id="span" class="w-heading">[span]インラインスタイル設定</h2>
<h4>この指定以降の文字のレイアウト（フォントや文字色など）を指定する。</h4>
<p class="mb2 px1">

<p>一時的に文字レイヤのlayout属性への指定を上書きするイメージ。
	文字レイヤをクリア（[clear_text]、[clear_lay]）するとリセット、以降は元通り文字レイヤのlayout属性に従う</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>文字を表示するレイヤ</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
<tr><td>layout</td><td></td><td>リセット</td><td>String</td><td>文字のレイアウトを指定する。文法は[lay]のlayout属性と同様。</td></tr>
</table>

</p>


<h2 id="tcy" class="w-heading">[tcy]縦中横を表示する</h2>
<h4>縦中横文字を追加する。ルビは同時に設定する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>文字を表示するレイヤ</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
<tr class="y"><td>t</td><td>y</td><td></td><td>String</td><td>縦中横文字列、通常半角文字を指定する。</td></tr>
<tr><td>r</td><td></td><td>ルビ無し</td><td>String</td><td>ルビ文字列</td></tr>
</table>

</p>


<h1><a id="画像画像レイヤ画像画像レイヤ"></a>画像・画像レイヤ</h1>
<h2 id="add_face" class="w-heading">[add_face]差分画像の追加</h2>
<h4>差分画像を登録する。</h4>
<p class="mb2 px1">

<p>本タグだけでは差分画像を表示しない。画像レイヤの[lay]タグface属性で指定する差分名称を登録する。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>差分名称</td><td>[lay]タグface属性で指定する差分名称</td></tr>
<tr><td>fn</td><td></td><td>属性nameの値</td><td>画像ファイル名</td><td>表示する画像、swf</td></tr>
<tr><td>dx</td><td></td><td>0</td><td>基本画像左上を(0, 0)とする座標</td><td>差分画像の表示横位置</td></tr>
<tr><td>dy</td><td></td><td>0</td><td>(↑と同じ)</td><td>差分画像の表示縦位置</td></tr>
<tr><td>blendmode</td><td></td><td>何もしない</td><td>ブレンドモード名（"screen"など）</td><td>このレイヤと下のレイヤとの重なりにおいて、<br>ドット単位で色のブレンド演算を行なう。<br>詳細は<a href="#clearvar">blendModeの解説</a>を参照。</td></tr>
</table>
<p>例えば同じ画像で差分表示位置やブレンドモードが違う登録をしたい場合、<br>
	[add_face name="a_normal" fn="画像" dx=0 dy=0]<br>
	[add_face name="a_10_10" fn="画像" dx=10 dy=10]<br>
	[add_face name="a_screen" fn="画像" dx=0 dy=0 blendmode="screen"]<br>
	とnameを変えることで登録できます。</p>

</p>


<h1><a id="htmlフレームhtmlフレーム"></a>HTMLフレーム</h1>
<h2 id="add_frame" class="w-heading">[add_frame]フレーム</h2>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>xxxxxx</td><td>y</td><td></td><td></td><td></td></tr>
</table>

</p>


<h2 id="let_frame" class="w-heading">[let_frame]フレーム</h2>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>xxxxxx</td><td>y</td><td></td><td></td><td></td></tr>
</table>

</p>


<h2 id="set_frame" class="w-heading">[set_frame]フレーム</h2>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>xxxxxx</td><td>y</td><td></td><td></td><td></td></tr>
</table>

</p>


<h2 id="frame" class="w-heading">[frame]フレーム</h2>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>xxxxxx</td><td>y</td><td></td><td></td><td></td></tr>
</table>

</p>


<h2 id="tsy_frame" class="w-heading">[tsy_frame]フレーム</h2>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>xxxxxx</td><td>y</td><td></td><td></td><td></td></tr>
</table>

</p>


<h1><a id="イベントイベント"></a>イベント</h1>
<h2 id="clear_event" class="w-heading">[clear_event] イベントを全消去</h2>
<h4>イベント予約を全て削除する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>global</td><td></td><td>false</td><td>Boolean</td><td>trueを指定すると全ての大域イベントを削除する。</td></tr>
<tr><td>falseの場合は大域以外の全てのイベントを削除する</td><td></td><td></td><td></td><td></td></tr>
</table>

</p>


<h2 id="enable_event" class="w-heading">[enable_event] イベント有無の切替</h2>
<h4>文字レイヤごとのイベント発生有効無効を設定する。</h4>
<p class="mb2 px1">

<p>無効にするとマウスイベントが無効になり、[s]待ちなどでイベントが発生しなくなるが、イベント予約は別の話であり、削除などされない。
	有効にすればマウスイベントが発生するようになり、再びイベント待ちされるようになる</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>イベント有効無効を設定するレイヤ</td></tr>
<tr><td>enabled</td><td></td><td>true</td><td>Boolean</td><td>イベントを有効にするか</td></tr>
</table>

</p>


<h2 id="event" class="w-heading">[event]イベントを予約</h2>
<h4>次の[s]などのイベント待ちに向けてイベント処理を予約する。</h4>
<p class="mb2 px1">

<p>あるイベントが発生した際、global=falseのイベント予約は全て削除される</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>key</td><td>y</td><td></td><td>click、rightclick、middleclick、upwheel、downwheel、<br>イベントのキー名※1</td><td>イベントを発生させるトリガーイベント<br><br>修飾キーの同時押し（あるいは修飾キーを押しといて通常キー）を任意に組み合わせられます。「半角プラスで」「ABC順に」「イベントのキー名の前に」繋げて下さい。<br>（例1）key=alt+enter<br>（例2）key=alt+ctrl+shift+enter<br>修飾キー対応表は以下になります。<br>AIRNovel表記</td></tr>
<tr><td>fn</td><td>...</td><td>...</td><td>...</td><td>イベント発生時にジャンプする先。指定方法は[jump]と同様。<br>callの場合、ジャンプ先から[return]で戻ると、<br>再度[s]などのイベント待ち状態に戻る。</td></tr>
<tr><td>label</td><td>...</td><td>...</td><td>...</td><td>(↑と同じ)</td></tr>
<tr><td>global</td><td></td><td>false</td><td>Boolean</td><td>trueを指定すると大域的なイベント扱いとなり、<br>イベント発生時にイベント予約が削除されない</td></tr>
<tr><td>arg</td><td></td><td></td><td>String</td><td>指定した場合、クリック時ジャンプ先で「&amp;const.an.eventArg」にて値を受け取れる</td></tr>
<tr><td>del</td><td>...</td><td></td><td>Boolean</td><td>trueを指定すると予約済みイベントを削除する。<br>fn/label/callとdelは同時指定できません</td></tr>
<tr><td>frame</td><td></td><td>10</td><td>1〜</td><td>key=enter_frameの場合のみ有効。<br>フレームイベントは毎秒何度も（[window]のframerate回）発生するが、 アプリ全体が重くなるので、適度に間引いてイベントを時々発生させるため、
	フレーム何回に一回イベントを発生させるかを指定する。<br>例）30フレームで動作するアプリでframe=15を指定すると、30/15=0.5秒に一回発生（タイミングにより厳密ではない）</td></tr>
</table>
<p>※1 イベントのキー名は以下のキーボードキー名かActionScriptイベント名のいずれか。
	key属性の値 | コメント
	-- | --
	alternate | optionと同値。Winで言うALTキー。MacならOptionキー
	backquote |
	backslash |
	backspace |
	caps_lock |
	command | Macにある、Winで言うCTRLキーのようなもの
	control |
	delete |
	down | 矢印キーの下
	end |
	enter |
	equal | 「=（イコール）」キーはMacにしか無い
	escape |
	home |
	left | 矢印キーの左
	numpad_enter | テンキーのEnterキー。テンキーはキーボードによっては存在しない
	option | alternateと同値。Winで言うALTキー。MacならOptionキー
	orientation | （デバイス・ANBooksのみ）デバイスが回転したらイベント発生（※3）
	page_down |
	page_up |
	right | 矢印キーの右
	shift |
	space |
	tab |
	up | 矢印キーの上
	f1 |
	f2 |
	f3 |
	f4 |
	f5 |
	f6 |
	f7 |
	f8 |
	f9 |
	f10 |
	f11 |
	f12 |
	f13 | キーボードによっては存在しない
	f14 | キーボードによっては存在しない
	f15 | キーボードによっては存在しない
	enter_frame | 毎フレーム毎にイベント発生（※2）
	activate | アプリがフォーカスを取得して、アクティブ（前面）になった
	deactivate | アプリがフォーカスを失って、非アクティブになった
	back | （Android）戻るキー<br>（ちなみにホームキーはAndroid仕様でホームに戻る以外の機能は持たせられない）
	menu | （Android）メニューキー
	search | （Android）検索キー</p>
<p>※2 enter_frameイベントは毎秒何度も発生する。</p>

</p>


<h2 id="l" class="w-heading">[l] 行末クリック待ち</h2>
<h4>シナリオファイルの順次処理を停止し、クリックやキー押下（→詳細は[waitclick]）を待つ。</h4>
<p class="mb2 px1">

<p>「breakline」という画像やswfファイルが用意されていれば、行末クリック待ちマークとして表示する。
	クリックやキー押下が発生した場合、処理を再開する。
	[event]などでイベントが登録されていれば、イベント発生待ちを行う。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>visible</td><td></td><td>true</td><td>Boolean</td><td>trueで行末クリック待ち記号を表示、falseで非表示</td></tr>
</table>

</p>


<h2 id="p" class="w-heading">[p]改ページクリック待ち</h2>
<h4>シナリオファイルの順次処理を停止し、クリックやキー押下（→詳細は[waitclick]）を待つ。</h4>
<p class="mb2 px1">

<p>「breakpage」という画像やswfファイルが用意されていれば、改ページクリック待ちマークとして表示する。
	クリックやキー押下が発生した場合、処理を再開する。
	[event]などでイベントが登録されていれば、イベント発生待ちを行う。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>visible</td><td></td><td>true</td><td>Boolean</td><td>trueで改ページ記号を表示、falseで非表示</td></tr>
<tr><td>er</td><td></td><td>何もしない</td><td>Boolean</td><td>trueで改ページ待ち後に[er]処理を行なう</td></tr>
</table>

</p>


<h2 id="s" class="w-heading">[s] 停止する</h2>
<h4>引数無し。</h4>
<p class="mb2 px1">

<p>シナリオファイルの順次処理を停止する。
	[event]などでイベントが登録されていれば、イベント発生待ちを行う。</p>

</p>


<h2 id="set_cancel_skip" class="w-heading">[set_cancel_skip] スキップ中断予約</h2>
<p>引数無し。
	ページ末まで一気に読み進むモード、自動読みすすみモードなどの開始に備え、クリックなどで処理を中断できるような特殊イベントを予約する。
	クリックやキー押下が発生した場合、処理を再開する。</p>
<p>※例えば自動読み進みモードだと[l][p]などで停止しないため、予約イベントが処理されない。その為のタグ。</p>

</p>


<h2 id="wait" class="w-heading">[wait]ウェイトを入れる</h2>
<h4>指定時間スクリプト処理を待ち、再開する。</h4>
<p class="mb2 px1">

<p>[event]などでイベントが登録されていても、イベント発生待ちを行わない。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>time</td><td>y</td><td></td><td>ミリ秒</td><td>処理を待つ時間</td></tr>
<tr><td>canskip</td><td></td><td>true</td><td>Boolean</td><td>クリックなど（→詳細は[waitclick]）でウエイトをキャンセルできるか</td></tr>
</table>

</p>


<h2 id="waitclick" class="w-heading">[waitclick]クリックを待つ</h2>
<h4>シナリオファイルの順次処理を停止し、クリックやキー押下※を待つ。</h4>
<p class="mb2 px1">

<p>引数無し。<br>
	クリックやキー押下が発生した場合、処理を再開する。<br>
	[event]などでイベントが登録されていれば、イベント発生待ちを行う。<br>
	<br>
	※クリックやキー押下とは、以下のイベントを差す。<br>
	　　click<br>
	　　downwheel（下方向へのマウスホイール）<br>
	　　enter<br>
	　　space<br>
	　　down（矢印キーの下）</p>

</p>


<h1><a id="ｂｇｍ効果音ｂｇｍ効果音"></a>ＢＧＭ・効果音</h1>
<h2 id="fadebgm" class="w-heading">[fadebgm]BGMのフェード</h2>
<h4>BGMを指定した音量に、段階的に変化させる。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>volume</td><td>y</td><td></td><td>0.0〜1.0（実数）</td><td>音量</td></tr>
<tr class="y"><td>time</td><td>y</td><td></td><td>ミリ秒</td><td>フェード時間</td></tr>
<tr><td>delay</td><td></td><td>0</td><td>ミリ秒</td><td>変化する前に待機する遅延時間</td></tr>
</table>

</p>


<h2 id="fadeoutbgm" class="w-heading">[fadeoutbgm] BGMのフェードアウト</h2>
<h4>BGMを無音に、段階的に変化させる。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>time</td><td>y</td><td></td><td>ミリ秒</td><td>フェード時間</td></tr>
<tr><td>stop</td><td></td><td>true</td><td>Boolean</td><td>trueで「フェード終了時の再生停止」、falseなら行なわない。</td></tr>
<tr><td>delay</td><td></td><td>0</td><td>ミリ秒</td><td>変化する前に待機する遅延時間</td></tr>
</table>

</p>


<h2 id="fadeoutse" class="w-heading">[fadeoutse] 効果音のフェードアウト</h2>
<h4>効果音を無音に、段階的に変化させる。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>buf</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>トラック名を変えれば同時に複数の音を操作することが出来ます。</td></tr>
<tr class="y"><td>time</td><td>y</td><td></td><td>ミリ秒</td><td>フェード時間</td></tr>
<tr><td>stop</td><td></td><td>true</td><td>Boolean</td><td>trueで「フェード終了時の再生停止」、falseなら行なわない。</td></tr>
<tr><td>delay</td><td></td><td>0</td><td>ミリ秒</td><td>変化する前に待機する遅延時間</td></tr>
</table>

</p>


<h2 id="fadese" class="w-heading">[fadese]効果音のフェード</h2>
<h4>効果音を指定した音量に、段階的に変化させる。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>buf</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>トラック名を変えれば同時に複数の音を操作することが出来ます。</td></tr>
<tr class="y"><td>volume</td><td>y</td><td></td><td>0.0〜1.0（実数）</td><td>音量</td></tr>
<tr class="y"><td>time</td><td>y</td><td></td><td>ミリ秒</td><td>フェード時間</td></tr>
<tr><td>delay</td><td></td><td>0</td><td>ミリ秒</td><td>変化する前に待機する遅延時間</td></tr>
</table>

</p>


<h2 id="playbgm" class="w-heading">[playbgm]BGM の演奏</h2>
<h4>BGMを再生する。</h4>
<p class="mb2 px1">

[playse]とは違い、キー押下Skip中でも必ず再生を行なう。（canskip = false）
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>fn</td><td>y</td><td></td><td>BGM音声ファイル名</td><td>再生する音声ファイル名</td></tr>
<tr><td>loop</td><td></td><td>true</td><td>Boolean</td><td>trueでBGMのようにループ再生する。</td></tr>
<tr><td>volume</td><td></td><td>1.0</td><td>0.0〜1.0（実数）</td><td>再生音量。ただし音量を示すシステム変数（sys:const.an.sound.BGM.volume）は変更しない</td></tr>
<tr><td>ret_ms</td><td></td><td>0（冒頭）</td><td>ミリ秒</td><td>ループ戻り位置指定。冒頭から再生開始するが、mp3終端に行くたびに指定したミリ秒の位置に戻る</td></tr>
<tr><td>end_ms</td><td></td><td>終端</td><td>ミリ秒</td><td>音声ファイルの終端位置を指定する。（音声ファイルの末尾にどうしても無音が残る場合、ループ時に困るときなどに）<br>正の値は「冒頭から何ms目を終端とするか」<br>負の値は「末尾から何ms手前を終端とするか」の指定。</td></tr>
<tr><td>join</td><td></td><td>true</td><td>Boolean</td><td>trueで読み込みを待って次のタグへ進む。</td></tr>
</table>

</p>


<h2 id="playse" class="w-heading">[playse]効果音の再生</h2>
<h4>効果音を再生する。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>fn</td><td>y</td><td></td><td>効果音音声ファイル名</td><td>再生する音声ファイル名</td></tr>
<tr><td>buf</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>トラック名を変えれば同時に複数の音を操作することが出来ます。</td></tr>
<tr><td>loop</td><td></td><td>false</td><td>Boolean</td><td>trueでBGMのようにループ再生する。</td></tr>
<tr><td>volume</td><td></td><td>1.0</td><td>0.0〜1.0（実数）</td><td>再生音量。ただし音量を示すシステム変数（sys:const.an.sound.【トラック名】.volume）は変更しない</td></tr>
<tr><td>ret_ms</td><td></td><td>0（冒頭）</td><td>ミリ秒</td><td>ループ戻り位置指定。冒頭から再生開始するが、mp3終端に行くたびに指定したミリ秒の位置に戻る。</td></tr>
<tr><td>end_ms</td><td></td><td>終端</td><td>ミリ秒</td><td>音声ファイルの終端位置を指定する。（音声ファイルの末尾にどうしても無音が残る場合、ループ時に困るときなどに）<br>正の値は「冒頭から何ms目を終端とするか」<br>負の値は「末尾から何ms手前を終端とするか」の指定。</td></tr>
<tr><td>join</td><td></td><td>true</td><td>Boolean</td><td>trueで読み込みを待って次のタグへ進む。</td></tr>
<tr><td>canskip</td><td></td><td>true</td><td>Boolean</td><td>trueでキー押下Skip中なら再生をしない</td></tr>
<tr><td>cache</td><td></td><td>true</td><td>Boolean</td><td>trueなら今まで通り、内部的にサウンドデータをキャッシュして再度再生時に素早く再生する（mp3のみ）</td></tr>
</table>

</p>


<h2 id="stop_allse" class="w-heading">[stop_allse] 全効果音再生の停止</h2>
<h4>全てのサウンドを停止する。ぴたっと止める。</h4>
<p class="mb2 px1">


</p>


<h2 id="stopbgm" class="w-heading">[stopbgm]BGM 演奏の停止</h2>
<h4>BGM 演奏を停止する。ぴたっと止める。</h4>
<p class="mb2 px1">


</p>


<h2 id="stopfadese" class="w-heading">[stopfadese] 音声フェードの停止</h2>
<h4>音声フェードを停止する。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>buf</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>トラック名を変えれば同時に複数の音を操作することが出来ます。<br>BGMと指定するとBGMの指定。</td></tr>
</table>

</p>


<h2 id="stopse" class="w-heading">[stopse]効果音再生の停止</h2>
<h4>効果音再生を停止する。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>buf</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>トラック名を変えれば同時に複数の音を操作することが出来ます。</td></tr>
</table>

</p>


<h2 id="volume" class="w-heading">[volume]音量設定</h2>
<h4>BGMや効果音を指定した音量にする。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>buf</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>トラック名を変えれば同時に複数の音を操作することが出来ます。<br>BGMと指定するとBGMの音量設定。</td></tr>
<tr><td>volume</td><td></td><td>1.0</td><td>0.0〜1.0（実数）</td><td>音量</td></tr>
</table>

</p>


<h2 id="wb" class="w-heading">[wb]BGM フェードの終了待ち</h2>
<h4>BGM フェードの終了を待つ。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>canskip</td><td></td><td>false</td><td>Boolean</td><td>trueでクリックキャンセル可能にする。</td></tr>
</table>

</p>


<h2 id="wf" class="w-heading">[wf]効果音フェードの終了待ち</h2>
<h4>効果音 フェードの終了を待つ。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>buf</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>トラック名を変えれば同時に複数の音を操作することが出来ます。</td></tr>
<tr><td>canskip</td><td></td><td>false</td><td>Boolean</td><td>trueでクリックキャンセル可能にする。</td></tr>
</table>

</p>


<h2 id="wl" class="w-heading">[wl]BGM 再生の終了待ち</h2>
<h4>BGM 再生の終了を待つ。</h4>
<p class="mb2 px1">

<p>loop=true（[playbgm]のデフォルト値）なら待たない。<br>
	利用時は【音声再生[playbgm]がjoin=true(ちなみにデフォルト)であること】を必須条件とします。</p>

</p>


<h2 id="ws" class="w-heading">[ws]効果音再生の終了待ち</h2>
<h4>効果音再生の終了を待つ。</h4>
<p class="mb2 px1">

<p>loop=trueなら待たない。
	利用時は【音声再生[playse]がjoin=true(ちなみにデフォルト)であること】を必須条件とします。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>buf</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>トラック名を変えれば同時に複数の音を操作することが出来ます。</td></tr>
<tr><td>canskip</td><td></td><td>false</td><td>Boolean</td><td>trueでクリックキャンセル可能にする。</td></tr>
</table>

</p>


<h2 id="xchgbuf" class="w-heading">[xchgbuf]再生トラックの交換</h2>
<h4>二つのバッファを交換する。未再生でも再生中でも良いが、フェード中は避けること。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>buf</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>トラック名</td></tr>
<tr><td>buf2</td><td></td><td>SE</td><td>効果音を識別するトラック名</td><td>もう一つのトラック名</td></tr>
</table>

</p>


<h1><a id="条件分岐条件分岐"></a>条件分岐</h1>
<h2 id="else" class="w-heading">[else]その他ifブロック開始</h2>
<h4>プログラム言語における、条件分岐のelse文。</h4>
<p class="mb2 px1">

<p>引数無し。<br>
	詳細は【開発者向け情報：式の評価と条件分岐】をご覧下さい。</p>

</p>


<h2 id="elsif" class="w-heading">[elsif]別条件のifブロック開始</h2>
<h4>プログラム言語における、条件分岐のelsif文。</h4>
<p class="mb2 px1">

<p>詳細は【開発者向け情報：式の評価と条件分岐】をご覧下さい。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>exp</td><td>y</td><td></td><td>Boolean</td><td>trueの場合処理は直後にうつる。</td></tr>
<tr><td>falseなら次の[elsif]や[else]の評価を行なう。</td><td></td><td></td><td></td><td></td></tr>
</table>

</p>


<h2 id="endif" class="w-heading">[endif]ifブロックの終端</h2>
<h4>プログラム言語における、条件分岐のendif文。</h4>
<p class="mb2 px1">

<p>引数無し。<br>
	詳細は【開発者向け情報：式の評価と条件分岐】をご覧下さい。</p>

</p>


<h2 id="if" class="w-heading">[if]ifブロックの開始</h2>
<h4>プログラム言語における、条件分岐のif文。</h4>
<p class="mb2 px1">

<p>詳細は【開発者向け情報：式の評価と条件分岐】をご覧下さい。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>exp</td><td>y</td><td></td><td>Boolean</td><td>trueの場合処理は直後にうつる。<br>falseなら次の[elsif]や[else]の評価を行なう。</td></tr>
</table>

</p>


<h1><a id="ラベルジャンプラベルジャンプ"></a>ラベル・ジャンプ</h1>
<h2 id="button" class="w-heading">[button]ボタンを表示</h2>
<h4>文字レイヤにボタンを配置する。</h4>
<p class="mb2 px1">

<p>※選択肢として使用する場合、ジャンプ先のラベル直後には必ず[record_place]を記述して、ジャンプ直後でセーブしても正しくセーブされるようにして下さい。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>デフォルト文字レイヤ</td><td>文字レイヤ名</td><td>ボタンを配置する文字レイヤ</td></tr>
<tr><td>page</td><td></td><td>back</td><td>fore、back</td><td>ページの裏表</td></tr>
<tr class="y"><td>pic</td><td>y</td><td></td><td>画像ファイル名（swf不可）</td><td>ボタンとして配置する画像を指定する。<br>ただし画像は縦に三等分し、左から「通常時」「クリック押下時」「マウスカーソルを載せた時」の画像として表示する。</td></tr>
<tr><td>pos<br>left<br>center<br>right<br>s_right<br>top<br>middle<br>bottom<br>s_bottom</td><td></td><td>※</td><td>※</td><td>※詳細は[lay]を参照</td></tr>
<tr><td>hint</td><td></td><td></td><td>String</td><td>設定した場合のみ、マウスカーソルを載せるとヒントをチップス表示する</td></tr>
<tr><td>clickse</td><td></td><td>省略時は無音</td><td>効果音ファイル名</td><td>指定すると、クリック時に効果音を再生する</td></tr>
<tr><td>enterse</td><td></td><td>省略時は無音</td><td>効果音ファイル名</td><td>指定すると、ボタン上にマウスカーソルが載った時に効果音を再生する</td></tr>
<tr><td>leavese</td><td></td><td>省略時は無音</td><td>効果音ファイル名</td><td>指定すると、ボタン上からマウスカーソルが外れた時に効果音を再生する</td></tr>
<tr><td>clicksebuf</td><td></td><td>SYS</td><td>サウンドバッファ名</td><td>クリック時効果音を再生するサウンドバッファを指定する</td></tr>
<tr><td>entersebuf</td><td></td><td>SYS</td><td>サウンドバッファ名</td><td>クリック時効果音を再生するサウンドバッファを指定する</td></tr>
<tr><td>leavesebuf</td><td></td><td>SYS</td><td>サウンドバッファ名</td><td>クリック時効果音を再生するサウンドバッファを指定する</td></tr>
<tr><td>call</td><td></td><td>false</td><td>Boolean</td><td>trueの場合は[call]、falseは[jump]。<br>ただしcall=trueによりサブルーチンコールした場合、[return]によって「コールする前のイベント予約状態＆待ち状態」に戻る。</td></tr>
<tr><td>fn</td><td>...</td><td>...</td><td>...</td><td>クリック時にジャンプする先。<br>指定方法は[jump]と同様</td></tr>
<tr><td>label</td><td>...</td><td>...</td><td>...</td><td>(↑と同じ)</td></tr>
<tr><td>arg</td><td></td><td></td><td>String</td><td>指定した場合、クリック時ジャンプ先で「&amp;const.an.eventArg」にて値を受け取れる</td></tr>
<tr><td>r_call</td><td></td><td>false</td><td>Boolean</td><td>右クリック時ジャンプについての指定。<br>trueの場合は[call]、falseは[jump]。<br>ただしr_call=trueによりサブルーチンコールした場合、[return]によって「コールする前のイベント予約状態＆待ち状態」に戻る。</td></tr>
<tr><td>r_fn</td><td>...</td><td>...</td><td>...</td><td>右クリック時にジャンプする先。<br>指定方法は[jump]と同様</td></tr>
<tr><td>r_label</td><td>...</td><td>...</td><td>...</td><td>(↑と同じ)</td></tr>
<tr><td>r_arg</td><td></td><td></td><td>String</td><td>指定した場合、右クリック時ジャンプ先で「&amp;const.an.eventArg」にて値を受け取れる</td></tr>
<tr><td>onenter</td><td></td><td>何もしない</td><td>ラベル名</td><td>マウス重なり（フォーカス取得）時、指定したラベルをコールする。 必ず[return]で戻ること。</td></tr>
<tr><td>onleave</td><td></td><td>何もしない</td><td>ラベル名</td><td>マウス重なり外れ（フォーカス外れ）時、指定したラベルをコールする。 必ず[return]で戻ること。</td></tr>
<tr><td>global</td><td></td><td>false</td><td>Boolean</td><td>詳細は[event]と同様。<br>※ボタンを[trans]する場合はtrueにしておく</td></tr>
<tr><td>enabled</td><td></td><td>true</td><td>Boolean</td><td>falseだと押せないボタンとなり、クリックイベントが発生しない。<br>これにより文字レイヤの任意の位置に画像表示できる機能を提供する。<br>画像は三等分しない。イベントや効果音指定は無効だが、ヒント機能は有効。</td></tr>
<tr><td>join</td><td></td><td>false</td><td>Boolean</td><td>trueで画像読み込みを待って次のタグへ進む。</td></tr>
<tr><td>event_at_down</td><td></td><td>false</td><td>Boolean</td><td>true：押すだけでイベント発動（画面常駐のシステムボタンなどに）<br>false：押して離すとイベント発動</td></tr>
<tr><td>draggable</td><td></td><td>false</td><td>Boolean</td><td>true：テキスト背後の矩形をドラッグできる。<br>event_at_down=trueだとクリックイベントが発生しなくなる。</td></tr>
<tr><td>drag_x</td><td></td><td>0</td><td>画面左上を(0, 0)とする座標</td><td>ドラッグ範囲の左上始点。</td></tr>
<tr><td>drag_y</td><td></td><td>0</td><td>(↑と同じ)</td><td>(↑と同じ)</td></tr>
<tr><td>drag_w</td><td></td><td>画面横幅</td><td>ドラッグ範囲縦横ピクセル数</td><td>ドラッグ範囲縦横サイズ。</td></tr>
<tr><td>drag_h</td><td></td><td>画面縦幅</td><td>(↑と同じ)</td><td>(↑と同じ)</td></tr>
<tr><td>dragmove_fn</td><td>...</td><td>...</td><td>...</td><td>ドラッグ中にサブルーチンコールする先。<br>指定方法は[jump]と同様</td></tr>
<tr><td>dragmove_label</td><td>...</td><td>...</td><td>...</td><td>(↑と同じ)</td></tr>
<tr><td>dragmove_arg</td><td></td><td></td><td>String</td><td>指定した場合、ドラッグ中コール先で「&amp;const.an.eventArg」にて値を受け取れる</td></tr>
<tr><td>alpha</td><td></td><td>1.0</td><td>0.0〜1.0（実数）</td><td>透過度。0（完全透明）〜0.5（半透明）〜1（不透明）</td></tr>
<tr><td>blendmode</td><td></td><td>何もしない</td><td>ブレンドモード名（"screen"など）</td><td>このボタンと下のレイヤとの重なりにおいて、<br>ドット単位で色のブレンド演算を行なう。<br>詳細は<a href="#clearvar">blendModeの解説</a>を参照。</td></tr>
<tr><td>rotation</td><td></td><td>0</td><td>-180〜180</td><td>回転角を度単位で指定。時計回りは0～180、反時計回りは0～-180を指定。 左上を中心に回る</td></tr>
<tr><td>scale_x</td><td></td><td>1.0</td><td>正負の実数値</td><td>横方向を何倍に拡大／縮小するか。負の値ならレイヤを左右反転</td></tr>
<tr><td>scale_y</td><td></td><td>1.0</td><td>正負の実数値</td><td>縦方向を何倍に拡大／縮小するか。負の値ならレイヤを上下反転</td></tr>
</table>

</p>


<h2 id="call" class="w-heading">[call]サブルーチンコール</h2>
<h4>スクリプト処理の現在位置をコールスタックに積み、ジャンプする。</h4>
<p class="mb2 px1">

<p>ジャンプ先での[return]により本タグの次の位置に戻る事が出来る。
	※あらゆるタグの中で唯一「通常、既読としない」タグですが、普通に使う分には気にしなくて良いです。</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>fn</td><td>どちらか、もしくは両方を指定</td><td>処理中のスクリプトファイル</td><td>スクリプトファイル名</td><td>コール先のスクリプトファイル<br>[call fn=ext_*]のようにワイルドカードをサポート。マッチするスクリプトを順不同にコールする。 （ワイルドカードは後方のみ）</td></tr>
<tr><td>label</td><td>スクリプトファイルの先頭</td><td>ラベル名（半角アスタリスク*も含む）</td><td>コール先のスクリプトファイルにあるラベル</td><td></td></tr>
<tr><td>count</td><td></td><td>false</td><td>Boolean</td><td>タグ位置を既読とするか</td></tr>
<tr><td>clear_local_event</td><td></td><td>何もしない</td><td>Boolean</td><td>trueの場合は[clear_event]を行なってからコールする。</td></tr>
</table>

</p>


<h2 id="jump" class="w-heading">[jump]シナリオジャンプ</h2>
<h4>指定位置のスクリプトにジャンプする</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>fn</td><td>どちらか、もしくは両方を指定</td><td>処理中のスクリプトファイル</td><td>スクリプトファイル名</td><td>コール先のスクリプトファイル</td></tr>
<tr><td>label</td><td>スクリプトファイルの先頭</td><td>ラベル名（半角アスタリスク*も含む）</td><td>コール先のスクリプトファイルにあるラベル</td><td></td></tr>
<tr><td>count</td><td></td><td>true</td><td>Boolean</td><td>タグ位置を既読とするか</td></tr>
</table>
<h4>ラベルは例えば以下のように使います。</h4>
<pre>
*aaa
無限ループ
[jump label=*aaa]
; =======================

さらにラベル名を考えるのが面倒なとき、「無名ラベル」ともいうべき機能が使えます。
「**after」は「そのコマンド以降で最初に見つかった**ラベルに」
「**before」は「そのコマンド以前で最初に見つかった**ラベルに」
ジャンプ・コールする、という指定です。次のように書きます。
; =======================
[jump label=****after]
***
**
も
[jump label=**after]
;**
っ
**
[l]
ぷ
[jump label=**before]
**
＠[s]
**
****
す
[jump label=***before]
; =======================
この例では「すもぷぷぷ……」と文字が表示されます。
「**」とか「***」とかアスタリスクは二個以上の任意の数が使え、同じ数同士が対応するラベルとなります。
が、上記例で見るとおりあんまり複雑に使うと可読性が下がってしまう気がしますので、局所的な用途に限ったほうが良さげです。
</pre>
</p>


<h2 id="pop_stack" class="w-heading">[pop_stack]コールスタック破棄</h2>
<h4>コールスタックを一つ破棄する</h4>
<p class="mb2 px1">
極力使用しないコーディングを推奨します。

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>clear</td><td></td><td>false</td><td>Boolean</td><td>true：全て破棄する。空でもエラーを出さない<br>false：スタックを一つ破棄する。空の場合はエラーメッセージ＆アプリ停止</td></tr>
</table>

</p>


<h2 id="return" class="w-heading">[return]サブルーチンから戻る</h2>
<h4>コールスタックに積まれているジャンプ先にジャンプする。</h4>
<p class="mb2 px1">

最後に積んだスタックを一つ破棄する。

</p>


<h1><a id="マクロマクロ"></a>マクロ</h1>
<h2 id="bracket2macro" class="w-heading">[bracket2macro] 括弧マクロの定義</h2>
<h4>引数textを持つマクロやタグを、任意の二つの文字を括弧とし、括弧で囲った記述で代用できるよう</h4>
<p class="mb2 px1">

例 …… [bracket2macro name=title text=｟｠]
（訂正：「任意の二つの文字」は特定の半角文字じゃなくてもよいです）
※適用範囲について
　　本タグより前にロードされたスクリプトファイルには適用されません。
　　またスクリプトファイルに本タグが記述された場合、本タグより前に出現した半角文字にも適用されません。
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>特定の文字</td><td>括弧にする任意の二つの文字。<br>マクロに出来るのは英文字、空白、;、[、]、<em>、=、&amp;、｜、《、》以外のみ。<br>正規表現で言えば　/[\w\s;[]</em>=&amp;｜《》]/　以外。<br>一文字マクロや定義済みの括弧文字は使用できない。</td></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>定義済みのマクロ名</td><td>半角文字に割り当てるマクロ名を指定。<br>組み込みタグか、[macro]による定義済みマクロ名で無ければならない。<br>組み込みタグやマクロは引数textだけを指定しても問題なく動作し、
	それを処理すること。渡される引数textは空文字の場合もある。</td></tr>
</table>

</p>


<h2 id="break_macro" class="w-heading">[break_macro]マクロから脱出</h2>
<h4>マクロ内の途中で、マクロから脱出したい際に使用する。</h4>
<p class="mb2 px1">


</p>


<h2 id="char2macro" class="w-heading">[char2macro] 一文字マクロの定義</h2>
<h4>引数無しのマクロやタグを、半角文字の記述で代用できるよう定義する</h4>
<p class="mb2 px1">

　　本タグより前にロードされたスクリプトファイルには適用されません。
　　またスクリプトファイルに本タグが記述された場合、本タグより前に出現した半角文字にも適用されません。
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>char</td><td>y</td><td></td><td>特定の半角文字</td><td>マクロにする半角文字。<br>マクロに出来るのは英文字、空白、;、[、]、<em>、=、&amp;、｜、《、》以外のみ。<br>正規表現で言えば　/[\w\s;[]</em>=&amp;｜《》]/　以外。<br>括弧文字や定義済みの一文字マクロは使用できない。</td></tr>
<tr class="y"><td>name</td><td>y</td><td></td><td>定義済みのマクロ名</td><td>半角文字に割り当てるマクロ名を指定。<br>組み込みタグか、[macro]による定義済みマクロ名で無ければならない。</td></tr>
</table>

</p>


<h2 id="endmacro" class="w-heading">[endmacro]マクロ定義の終了</h2>
<h4>[macro]と[endmacro]に囲まれた部分をマクロとして定義する。</h4>
<p class="mb2 px1">


</p>


<h2 id="macro" class="w-heading">[macro]マクロ定義の開始</h2>
<h4>[macro]と[endmacro]に囲まれた部分をマクロとして定義する。</h4>
<p class="mb2 px1">


定義したマクロは既存のタグと同様に使用できる。
渡した引数は、マクロ側で「mp:」スコープにより参照できる。
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>name</td><td>y</td><td>マクロ名</td><td>String</td><td>既存のタグやマクロと重複しないマクロ名</td></tr>
</table>

</p>


<h1><a id="しおりしおり"></a>しおり</h1>
<h2 id="copybookmark" class="w-heading">[copybookmark]しおりの複写</h2>
<h4>しおりデータを複写する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>from</td><td>y</td><td></td><td>数値</td><td>複写元のしおり番号</td></tr>
<tr class="y"><td>to</td><td>y</td><td></td><td>数値</td><td>複写先のしおり番号</td></tr>
<tr><td>path</td><td></td><td>従来通り SharedObjectに保存</td><td>フォルダパス</td><td>指定した場合、複写先（to）のしおりをファイルとしてフォルダパス下に保存する。</td></tr>
</table>

</p>


<h2 id="erasebookmark" class="w-heading">[erasebookmark] しおりの消去</h2>
<h4>しおりデータを削除する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>place</td><td>y</td><td></td><td>数値</td><td>処理対象のしおり番号</td></tr>
</table>

</p>


<h2 id="load" class="w-heading">[load]しおりの読込</h2>
<h4>しおりデータを読み込み、スクリプト処理を再開する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>place</td><td>y</td><td></td><td>数値</td><td>処理対象のしおり番号</td></tr>
<tr><td>fn</td><td>...</td><td>...</td><td>...</td><td>ロード後最初にしたい共通処理をコールする（処理は[return]で終わらせる）。指定方法は[jump]と同様。<br>ただし指定する際、fnとlabelは両方指定しなければならない。</td></tr>
</table>

</p>


<h2 id="record_place" class="w-heading">[record_place] セーブポイント指定</h2>
<h4>本タグの位置を、スクリプト読み込み時に再開する位置として設定する。</h4>
<p class="mb2 px1">
。
引数無し。

※マクロやサブルーチン内に記述された場合、最初に積まれたコールスタック位置をセーブポイントとする。
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>全てのレイヤ</td><td>保存対象レイヤ名（カンマ区切りで複数可能）</td><td>しおりに状態を保存するレイヤ。Save/Load画面レイヤや設定画面レイヤなど、保存すべきでないレイヤを除いて指定すべき</td></tr>
<tr><td>reset_sound</td><td></td><td>true</td><td>Boolean</td><td>全てのサウンドを停止・再度再生開始するか</td></tr>
</table>

</p>


<h2 id="reload_script" class="w-heading">[reload_script] スクリプト再読込</h2>
<h4>現在処理中のスクリプトをリロードする。</h4>
<p class="mb2 px1">
トまで戻って再開する。
引数無し。
※スクリプトを大幅に変えた後だと、正常に再開できない場合があります。

</p>


<h2 id="save" class="w-heading">[save]しおりの保存</h2>
<h4>しおりデータを保存する。</h4>
<p class="mb2 px1">
トの位置は最後に[record_place]をコールした位置。

[record_place]がゲーム状態（レイヤ状態など）をバッファに退避し、
[save]は指定しおりに書き出す機能。
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>place</td><td>y</td><td></td><td>数値</td><td>処理対象のしおり番号</td></tr>
<tr><td>path</td><td></td><td>従来通り SharedObjectに保存</td><td>フォルダパス</td><td>指定した場合、しおりをファイルとしてフォルダパス下に保存する。</td></tr>
</table>

</p>


<h1><a id="画面揺らし画面揺らし"></a>画面揺らし</h1>
<h2 id="quake" class="w-heading">[quake]画面を揺らす</h2>
<h4>画面全体を揺らす</h4>
<p class="mb2 px1">

	<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr><tr class="y"><td>time</td><td>y</td><td></td><td>ミリ秒数</td><td>揺らす時間</td></tr><tr><td>hmax</td><td>n</td><td>10</td><td>Integer</td><td>横方向の最大揺らし幅。幅はランダム値を取る</td></tr><tr><td>vmax</td><td>n</td><td>10</td><td>Integer</td><td>縦方向の最大揺らし幅。幅はランダム値を取る</td></tr><tr><td>ease</td><td>n</td><td>イージング無し</td><td>イージング名</td><td>揺れのイージング（値の変化の仕方）を指定する。<br><a href="http://hosted.zeh.com.br/tweener/docs/en-us/misc/transitions.html" target="_blank">イージングの変化はこちらの図</a>が分かりやすい。<br>指定できる値はplgTweensyの<a href="macro_plg.htm#tsy">[tsy]</a>を参照</td></tr></table>

</p>
<h2 id="stop_quake" class="w-heading">[stop_quake]画面揺らし中断</h2>
<h4>画面揺らしを中断する</h4>
<p class="mb2 px1">

	<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr><tr><td>canskip</td><td>n</td><td>true</td><td>Boolean</td><td>クリックなど（→詳細は<a href="tag.htm#waitclick" target="_blank">[waitclick]</a>）でウエイトをキャンセルできるか</td></tr></table>

</p>
<h2 id="wq" class="w-heading">[wq]画面揺らし終了待ち</h2>
<h4>画面揺らしの終了を待ち、再開する。</h4>
<p class="mb2 px1">
	[event]などでイベントが登録されていても、イベント発生待ちを行わない。

	<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr><tr><td>canskip</td><td>n</td><td>true</td><td>Boolean</td><td>クリックなど（→詳細は<a href="tag.htm#waitclick" target="_blank">[waitclick]</a>）でウエイトをキャンセルできるか</td></tr></table>

</p>
<h1><a id="システムシステム"></a>システム</h1>
<h2 id="close" class="w-heading">[close]アプリの終了</h2>
<h4>アプリケーションを終了する</h4>
<p class="mb2 px1">

※Flash 上では動作しません。タグを呼んでも何もしません。

</p>


<h2 id="loadplugin" class="w-heading">[loadplugin] プラグインの読み込み</h2>
<h4>プラグインとして読み込む</h4>
<p class="mb2 px1">

《注意》立ち絵や一枚絵を表示する目的にはこの命令を推奨しません。その目的を満たすタグは[lay]です。
プラグインには裏表ページの概念がなかったりするためです

※動的ライブラリの作り方については「プラグインの自作」をご覧下さい。
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>fn</td><td>y</td><td></td><td>ファイル名</td><td>読み込むプラグインのファイル名<br>[loadplugin fn=plg*]のようにワイルドカードをサポート。<br>マッチするプラグインを順不同に読み込む。読み込み済みなら無視。<br>（拡張子はswfのみ）（ワイルドカードは後方のみ）</td></tr>
<tr><td>index</td><td></td><td>最前面※</td><td>0〜</td><td>重なり順を指定する。<br>※最前面とは、Flashのstage.addChildにおける重なり順</td></tr>
<tr><td>join</td><td></td><td>true</td><td>Boolean</td><td>trueで読み込みを待って次のタグへ進む。</td></tr>
</table>

</p>


<h2 id="naviate_to" class="w-heading">[naviate_to]ＵＲＬを開く</h2>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>url</td><td>y</td><td></td><td>URL文字列</td><td>開くURL</td></tr>
</table>

</p>


<h2 id="snapshot" class="w-heading">[snapshot]スナップショット</h2>
<h4>アプリ表示部分全体を画像として保存する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer</td><td></td><td>全てのレイヤ</td><td>レイヤ名（半角カンマ区切りで複数レイヤを指定可能）</td><td>「plg:プラグイン名」と記述する事でプラグインも指定できる。</td></tr>
<tr><td>page</td><td></td><td>fore</td><td>fore、back</td><td>ページの裏表</td></tr>
<tr><td>fn</td><td></td><td>snapshot</td><td>String</td><td>※保存するファイル名（拡張子を除く）</td></tr>
<tr><td>format</td><td></td><td>jpg</td><td>png、jpg</td><td>保存する画像フォーマット</td></tr>
<tr><td>quality</td><td></td><td>90</td><td>1〜100</td><td>jpg保存する際の画質。大きいと画質が高いが処理が遅くなる。</td></tr>
<tr><td>width</td><td></td><td>アプリ表示部分の横サイズ</td><td>1〜</td><td>保存する画像の横ドットサイズ。<br>元のサイズと異なる場合は拡大・縮小される。</td></tr>
<tr><td>height</td><td></td><td>アプリ表示部分の縦サイズ</td><td>1〜</td><td>保存する画像の縦ドットサイズ。<br>元のサイズと異なる場合は拡大・縮小される。</td></tr>
<tr><td>smoothing</td><td></td><td>false</td><td>Boolean</td><td>拡大・縮小保存される場合、スムージングするか</td></tr>
<tr><td>pathdlg</td><td></td><td>false</td><td>Boolean</td><td>保存場所をGUIで選べるダイアログを表示するか</td></tr>
<tr><td>b_color</td><td></td><td>config.anprjで指定した背景色</td><td>色指定。0xFF000000（黒）など<br>16進数では透過2桁＋赤2桁＋緑2桁＋青2桁で指定</td><td>テキスト背後の矩形色。pngで 0x0 にすると透過する。<br>透過しない黒は 0xFF000000</td></tr>
</table>
<p>※fnを「app-storage:」で始まるファイル名にするとセーブデータと同じフォルダに保存します。</p>
<table>

		<tr>
<th>OS</th>
<th>Path</th>
		</tr>


		<tr><td>Mac OS X</td><td>HD/Users/[user]/Library/Preferences/[id]/</td></tr>
<tr><td>Windows 7</td><td>C:\Users[user]\AppData\Roaming[id]\</td></tr>
<tr><td>Linux</td><td>/home/[user]/.appdata/[id]/Local Store</td></tr>
<tr><td>　　[user]はインストールしたユーザー名、<br></td><td></td></tr>
<tr><td>　　[id]はアプリ固有のIDです。<br></td><td></td></tr>
<tr><td>参考：アプリケーション記憶領域ディレクトリ<br></td><td></td></tr>
</table>
<br>
<br>
※fnを「ss:/」で始めると、セーブデータファイル内部（SharedObject）に保存します。（例　ss:/yyy）
　保存した画像は、画像レイヤやボタンに画像として表示出来ます。（例　fn="ss:/yyy"）

</p>


<h2 id="title" class="w-heading">[title]タイトル指定</h2>
<h4>アプリウインドウのタイトル文字列を設定する。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>タイトル文字列</td></tr>
</table>

</p>


<h2 id="toggle_full_screen" class="w-heading">[toggle_full_screen] 全画面状態切替</h2>
<h4>呼び出す度にアプリの全画面／ウインドウモードを切り替えます。</h4>
<p class="mb2 px1">

<p>現在の状態は文字列変数「tmp:const.flash.display.Stage.displayState」を参照（→定数一覧）</p>
<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>fn</td><td></td><td>イベント登録せずモード切替</td><td>イベントのキー名※1</td><td>（Flash動作時のみ使用）イベントを発生させるトリガーイベント。<br>key属性の値は[event]を参照</td></tr>
</table>

</p>


<h2 id="window" class="w-heading">[window]アプリウインドウ設定</h2>
<h4>ゲームアプリのウインドウサイズや位置などを変更する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>width</td><td></td><td>現在値</td><td>1〜</td><td>アプリウインドウの横幅を指定</td></tr>
<tr><td>height</td><td></td><td>現在値</td><td>1〜</td><td>アプリウインドウの高さを指定</td></tr>
<tr><td>framerate</td><td></td><td>現在値</td><td>1〜</td><td>アプリ全体のフレームレートを変更</td></tr>
<tr><td>centering</td><td></td><td>何もしない</td><td>Boolean</td><td>trueを指定すると、アプリウインドウをデスクトップの中央に移動する</td></tr>
<tr><td>x</td><td></td><td>何もしない</td><td>画面左上を(0, 0)とする座標</td><td>デスクトップにおけるアプリウインドウの横位置を指定</td></tr>
<tr><td>y</td><td></td><td>何もしない</td><td>(↑と同じ)</td><td>デスクトップにおけるアプリウインドウの縦位置を指定</td></tr>
</table>

</p>


<h1><a id="デバッグその他"></a>デバッグ・その他</h1>
<h2 id="dump_val" class="w-heading">[dump_val]変数のダンプ</h2>
<h4>変数の内容をデバッグ表示する</h4>
<p class="mb2 px1">

</p>
<h2 id="dump_script" class="w-heading">[dump_script] スクリプトのダンプ</h2>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>xxxxxx</td><td>y</td><td></td><td></td><td></td></tr>
</table>

</p>
<h2 id="dump_stack" class="w-heading">[dump_stack]スタックのダンプ</h2>
<h4>[call]等によるコールスタックの内容をデバッグ表示する</h4>
<p class="mb2 px1">


</p>
<h2 id="log" class="w-heading">[log] ログ出力</h2>
<h4>引数をデスクトップにテキスト出力する（追記ではなく上書き。追記する。出力日時・分・スクリプ</h4>
<p class="mb2 px1">


</p>
<h2 id="dump_lay" class="w-heading">[dump_lay]レイヤのダンプ</h2>
<h4>レイヤの内容をデバッグ表示する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>layer n 全てのレイヤ レイヤ名（半角カンマ区切りで複数レイヤを指定可能） 「plg:プラグイン名」と記述する事でプラグインも指定できる。</td><td></td><td></td><td></td><td></td></tr>
</table>

</p>
<h2 id="stats" class="w-heading">[stats]パフォーマンス表示</h2>
<h4>FPSやメモリ使用量をチェックするStatsを表示する。（見方）。</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr><td>left</td><td></td><td>0</td><td>画面左上を(0, 0)とする座標</td><td>表示の横位置</td></tr>
<tr><td>top</td><td></td><td>(↑と同じ)</td><td>(↑と同じ)</td><td>表示の縦位置</td></tr>
</table>

</p>
<h2 id="trace" class="w-heading">[trace]デバッグ表示へ出力</h2>
<h4>引数をデバッグ表示する</h4>
<p class="mb2 px1">

<table><tr><th>属性</th><th>必須</th><th>省略時</th><th>値域・型</th><th>コメント</th></tr>
<tr class="y"><td>text</td><td>y</td><td></td><td>String</td><td>デバッグ表示する値</td></tr>
</table>

</p>


</section></article>
</main>

<footer class="ampstart-footer flex flex-column items-center pxy3">
	<nav class="ampstart-footer-nav">
		<ul class="list-reset flex flex-wrap mb3">
<li class="px1"><a class="text-decoration-none caps h5" href="https://github.com/ampproject/amp-by-example/issues/new"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="22.2" viewbox="0 0 53 49"><path d="M45 6.9c-1.6 1-3.3 1.6-5.2 2-1.5-1.6-3.6-2.6-5.9-2.6-4.5 0-8.2 3.7-8.2 8.3 0 .6.1 1.3.2 1.9-6.8-.4-12.8-3.7-16.8-8.7C8.4 9 8 10.5 8 12c0 2.8 1.4 5.4 3.6 6.9-1.3-.1-2.6-.5-3.7-1.1v.1c0 4 2.8 7.4 6.6 8.1-.7.2-1.5.3-2.2.3-.5 0-1 0-1.5-.1 1 3.3 4 5.7 7.6 5.7-2.8 2.2-6.3 3.6-10.2 3.6-.6 0-1.3-.1-1.9-.1 3.6 2.3 7.9 3.7 12.5 3.7 15.1 0 23.3-12.6 23.3-23.6 0-.3 0-.7-.1-1 1.6-1.2 3-2.7 4.1-4.3-1.4.6-3 1.1-4.7 1.3 1.7-1 3-2.7 3.6-4.6" class="ampstart-icon ampstart-icon-twitter"/></svg>feedback</a></li>
<li class="px1"><a class="text-decoration-none caps h5" href="https://github.com/ampproject/amp-by-example"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewbox="0 0 64.000000 64.000000"><path d="M22.4 1.4C-.8 9-7.4 38.4 10.5 54.9 14.7 58.8 20.4 62 23 62c.5 0 1-1.6 1-3.5 0-3.3-.2-3.5-3.5-3.5-3.5 0-4.2-.5-9-6.6-4.4-5.6-2.3-6.2 3.2-.9 4.2 4 7.5 4.5 9.8 1.2 1.4-2.1 1.4-2.2-.7-3-6-2.3-8.8-4.2-10.2-7.2-2.1-4.3-2.1-12.4 0-15.3.8-1.2 1.2-2.7.9-3.2-1-1.6.5-7 1.8-7 .7 0 2.4.6 3.8 1.4 1.7.9 6 1.4 11.9 1.4s10.2-.5 11.9-1.4c1.4-.8 3.1-1.4 3.8-1.4 1.3 0 2.8 5.4 1.8 7-.3.5.1 2 .9 3.2 1.8 2.5 2.1 10.3.7 14.1-1.4 3.6-5 6.6-9.3 7.8-3.3.9-3.7 1.2-2.8 2.9.5 1 1 4.6 1 7.9 0 3.5.4 6.1 1 6.1 5.2 0 15.8-8.8 19.8-16.5 2.3-4.3 2.7-6.3 2.7-13.5 0-7-.4-9.4-2.4-13.5C57.9 12.2 51.8 6 45.6 3 39.6.2 28.5-.6 22.4 1.4z" class="ampstart-icon"/></svg>github</a></li>
<li class="px1"><a href="https://creativecommons.org/licenses/by/4.0/" rel="nofollow"><amp-img src="https://camo.githubusercontent.com/45b46deab81a0adb3164212be341f1dd65111cf3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d43432532304259253230342e302d6c69676874677265792e737667" alt="License: CC BY 4.0" width="116" height="20" data-canonical-src="https://img.shields.io/badge/License-CC%20BY%204.0-lightgrey.svg" style="max-width:100%;"></amp-img></a></li>
		</ul>
	</nav>
	<small>AMP by Example is a part of Accelerated Mobile Pages Project</small>
</footer>
</body></html>