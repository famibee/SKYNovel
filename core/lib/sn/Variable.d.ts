import { IHTag, IVariable, ISetVal, typeProcVal, ISysBase, IData4Vari, IMark, IValMp, IValSave } from './CmnInterface';
import { Config } from './Config';
import { Areas } from './Areas';
export declare class Variable implements IVariable {
    private readonly cfg;
    private hScopes;
    private hSave;
    private hTmp;
    constructor(cfg: Config, hTag: IHTag);
    private sys;
    private data;
    private hSys;
    private hAreaKidoku;
    private callHook;
    setSys(sys: ISysBase): void;
    private readonly hProcDbgRes;
    private set_data_break;
    updateData(data: IData4Vari): void;
    private flush_;
    flush(): void;
    setDoRecProc(fnc: (doRec: boolean) => void): void;
    private doRecProc;
    defTmp(name: string, fnc: typeProcVal): void;
    cloneMp(): IValMp;
    setMp(mp: IValMp): void;
    setMark(place: number, mark: IMark): void;
    readonly getMark: (place: number) => IMark;
    cloneSave(): IValSave;
    mark2save(mark: IMark): void;
    loadScrWork(fn: string): void;
    getAreaKidoku: (fn: string) => Areas;
    saveKidoku(): void;
    private copybookmark;
    private erasebookmark;
    private let;
    private let_abs;
    private let_char_at;
    private let_index_of;
    private let_length;
    private let_replace;
    private let_round;
    private let_search;
    private let_substr;
    private clearsysvar;
    private clearvar;
    private readonly setVal;
    setVal_Nochk(scope: string, nm: string, val: any, autocast?: boolean): void;
    private static hSetEvent;
    readonly getVal: (arg_name: string, def?: string | number | undefined) => any;
    private castAuto;
    private REG_NUMERICLITERAL;
    private readonly dump_val;
    private $doRecLog;
    doRecLog(): boolean;
    private hValTrg;
    defValTrg(name: string, fnc: ISetVal): void;
    private runFirst_Bool_hSysVal_true;
    private runFirst_sys_an_tagCh_msecWait;
    private runFirst_sys_an_tagCh_msecWait_Kidoku;
    private runFirst_sys_an_auto_msecPageWait;
    private runFirst_sys_an_auto_msecLineWait;
    private runFirst_Bool_hSaveVal_true;
    private runFirst_Bool_hTmp_true;
    private runFirst_Bool_hTmp_false;
}
//# sourceMappingURL=Variable.d.ts.map