import { IEvtMng, IHEvt2Fnc } from './CmnLib';
import { HArg, IHTag, IVariable, IMain } from './CmnInterface';
import { LayerMng } from './LayerMng';
import { ScriptIterator } from './ScriptIterator';
import { EventListenerCtn } from './EventListenerCtn';
import { interaction, DisplayObject, Application } from 'pixi.js';
import { SoundMng } from './SoundMng';
import { Config } from './Config';
export declare class EventMng implements IEvtMng {
    private readonly cfg;
    private readonly hTag;
    private readonly appPixi;
    private readonly main;
    private readonly layMng;
    private readonly val;
    private readonly scrItr;
    private readonly elc;
    private readonly enMDownTap;
    private ham;
    private readonly hHamEv;
    constructor(cfg: Config, hTag: IHTag, appPixi: Application, main: IMain, layMng: LayerMng, val: IVariable, sndMng: SoundMng, scrItr: ScriptIterator);
    resvFlameEvent(win: Window): void;
    private resvFlameEvent4Wheel;
    private ev_keydown;
    private ev_contextmenu;
    private ev_wheel;
    private wheeling;
    private extend_wheel;
    private ev_wheel_waitstop;
    destroy(): void;
    private hLocalEvt2Fnc;
    private hGlobalEvt2Fnc;
    private defEvt2Fnc;
    private isStop;
    popLocalEvts(): IHEvt2Fnc;
    pushLocalEvts(h: IHEvt2Fnc): void;
    stdWait(fnc: (e?: interaction.InteractionEvent) => void, canskip?: boolean): void;
    button(hArg: HArg, em: DisplayObject): void;
    waitCustomEvent(hArg: HArg, elc: EventListenerCtn, fnc: () => void): void;
    private waitCustomEvent4Wheel;
    private clear_event;
    private clear_eventer;
    private event;
    private goTxt;
    private l;
    private p;
    private fncCancelSkip;
    private set_cancel_skip;
    private unregisterClickEvts;
    private wait;
    readonly cr: (len: number) => void;
    isSkipKeyDown(): boolean;
    private readonly hDownKeys;
}
